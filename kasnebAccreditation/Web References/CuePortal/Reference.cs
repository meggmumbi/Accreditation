//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace kasnebAccreditation.CuePortal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CuePortal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal")]
    public partial class CuePortal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetApplicationNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyForAccreditationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSponsorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDepartmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSchoolsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAffiliationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteChancellorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstitutionNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletekeymilestoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditChancellorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditAffiliationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSponsorOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditKeyMilestonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSchoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMissionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPhilosophyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMilestoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAffiliationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddschoolFacultiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDepartmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSponsorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditphylosophyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateLearningOutcome2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSpecializationAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSpecializationAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSpecializationAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDeliveryModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDeliveryModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback VlidateDeliveryMode2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateGradingSystem2OperationCompleted;
        
        private System.Threading.SendOrPostCallback EditGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInstructionalMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateInstructionalMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInstructionalMethodEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInstructionalMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCourseLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDocumentsInstProgrammesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmPaymentsInstitutionOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCourseLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCourseLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstitutionCreateinvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutComenNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUserHelpEmaiRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUniversityChancellorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitialGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateExitReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateProgrammeFeedbackVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateProgrammeEvaluationTooolOperationCompleted;
        
        private System.Threading.SendOrPostCallback PortalResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetRationaleDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetUniversityDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnuseraccountcreationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnceateapplicationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccreditationApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCampusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOptionResponceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatAccreditationResponceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrainersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SittingCapacityOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRecomBooksOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateComputerLabOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCompDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateICTAccessoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCampusLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletestaffLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletetrainerLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteclassLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRefBookLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCompLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCompDetailsLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelfEvaluationResponceOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintCertificateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatAccreditationSubQResponceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteICTLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelfEvalutionApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintScoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintdetailedReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmAccreditationPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateApplicantAccountRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintdApplicationReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailAccountCreationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintdsummeryscoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetSendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnChangeStudentPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAccreditationSharepointLinksOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CuePortal() {
            this.Url = global::kasnebAccreditation.Properties.Settings.Default.kasnebAccreditation_CuePortal_CuePortal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetApplicationNumberCompletedEventHandler GetApplicationNumberCompleted;
        
        /// <remarks/>
        public event ConfirmPaymentCompletedEventHandler ConfirmPaymentCompleted;
        
        /// <remarks/>
        public event ApproveCompletedEventHandler ApproveCompleted;
        
        /// <remarks/>
        public event ApplyForAccreditationCompletedEventHandler ApplyForAccreditationCompleted;
        
        /// <remarks/>
        public event DeleteSponsorsCompletedEventHandler DeleteSponsorsCompleted;
        
        /// <remarks/>
        public event DeleteDepartmentsCompletedEventHandler DeleteDepartmentsCompleted;
        
        /// <remarks/>
        public event DeleteSchoolsCompletedEventHandler DeleteSchoolsCompleted;
        
        /// <remarks/>
        public event DeleteAffiliationsCompletedEventHandler DeleteAffiliationsCompleted;
        
        /// <remarks/>
        public event DeleteChancellorsCompletedEventHandler DeleteChancellorsCompleted;
        
        /// <remarks/>
        public event GetInstitutionNumberCompletedEventHandler GetInstitutionNumberCompleted;
        
        /// <remarks/>
        public event DeletekeymilestoneCompletedEventHandler DeletekeymilestoneCompleted;
        
        /// <remarks/>
        public event EditChancellorsCompletedEventHandler EditChancellorsCompleted;
        
        /// <remarks/>
        public event EditAffiliationsCompletedEventHandler EditAffiliationsCompleted;
        
        /// <remarks/>
        public event EditSponsorCompletedEventHandler EditSponsorCompleted;
        
        /// <remarks/>
        public event EditKeyMilestonesCompletedEventHandler EditKeyMilestonesCompleted;
        
        /// <remarks/>
        public event EditSchoolCompletedEventHandler EditSchoolCompleted;
        
        /// <remarks/>
        public event EditDepartmentCompletedEventHandler EditDepartmentCompleted;
        
        /// <remarks/>
        public event EditGeneralDetailsCompletedEventHandler EditGeneralDetailsCompleted;
        
        /// <remarks/>
        public event AddMissionDetailsCompletedEventHandler AddMissionDetailsCompleted;
        
        /// <remarks/>
        public event AddPhilosophyCompletedEventHandler AddPhilosophyCompleted;
        
        /// <remarks/>
        public event AddMilestoneCompletedEventHandler AddMilestoneCompleted;
        
        /// <remarks/>
        public event AddAffiliationsCompletedEventHandler AddAffiliationsCompleted;
        
        /// <remarks/>
        public event AddschoolFacultiesCompletedEventHandler AddschoolFacultiesCompleted;
        
        /// <remarks/>
        public event AddDepartmentsCompletedEventHandler AddDepartmentsCompleted;
        
        /// <remarks/>
        public event AddSponsorsCompletedEventHandler AddSponsorsCompleted;
        
        /// <remarks/>
        public event AddHistoryCompletedEventHandler AddHistoryCompleted;
        
        /// <remarks/>
        public event EditphylosophyCompletedEventHandler EditphylosophyCompleted;
        
        /// <remarks/>
        public event ValidateLearningOutcome2CompletedEventHandler ValidateLearningOutcome2Completed;
        
        /// <remarks/>
        public event AddLearningOutcomeCompletedEventHandler AddLearningOutcomeCompleted;
        
        /// <remarks/>
        public event EditProgramRationaleCompletedEventHandler EditProgramRationaleCompleted;
        
        /// <remarks/>
        public event EditSpecializationAreasCompletedEventHandler EditSpecializationAreasCompleted;
        
        /// <remarks/>
        public event AddSpecializationAreasCompletedEventHandler AddSpecializationAreasCompleted;
        
        /// <remarks/>
        public event EditLearningOutcomeCompletedEventHandler EditLearningOutcomeCompleted;
        
        /// <remarks/>
        public event DeleteLearningOutcomeCompletedEventHandler DeleteLearningOutcomeCompleted;
        
        /// <remarks/>
        public event DeleteSpecializationAreaCompletedEventHandler DeleteSpecializationAreaCompleted;
        
        /// <remarks/>
        public event AddDeliveryModeCompletedEventHandler AddDeliveryModeCompleted;
        
        /// <remarks/>
        public event DeleteDeliveryModeCompletedEventHandler DeleteDeliveryModeCompleted;
        
        /// <remarks/>
        public event VlidateDeliveryMode2CompletedEventHandler VlidateDeliveryMode2Completed;
        
        /// <remarks/>
        public event AddGradingSystemCompletedEventHandler AddGradingSystemCompleted;
        
        /// <remarks/>
        public event ValidateGradingSystem2CompletedEventHandler ValidateGradingSystem2Completed;
        
        /// <remarks/>
        public event EditGradingSystemCompletedEventHandler EditGradingSystemCompleted;
        
        /// <remarks/>
        public event DeleteGradingSystemCompletedEventHandler DeleteGradingSystemCompleted;
        
        /// <remarks/>
        public event AddUnitCompletedEventHandler AddUnitCompleted;
        
        /// <remarks/>
        public event EditUnitCompletedEventHandler EditUnitCompleted;
        
        /// <remarks/>
        public event DeleteUnitCompletedEventHandler DeleteUnitCompleted;
        
        /// <remarks/>
        public event AddInstructionalMethodCompletedEventHandler AddInstructionalMethodCompleted;
        
        /// <remarks/>
        public event ValidateInstructionalMethodCompletedEventHandler ValidateInstructionalMethodCompleted;
        
        /// <remarks/>
        public event AddInstructionalMethodEntryCompletedEventHandler AddInstructionalMethodEntryCompleted;
        
        /// <remarks/>
        public event DeleteInstructionalMethodCompletedEventHandler DeleteInstructionalMethodCompleted;
        
        /// <remarks/>
        public event AddCourseLearningOutcomeCompletedEventHandler AddCourseLearningOutcomeCompleted;
        
        /// <remarks/>
        public event AddBookCompletedEventHandler AddBookCompleted;
        
        /// <remarks/>
        public event ValidateBookCompletedEventHandler ValidateBookCompleted;
        
        /// <remarks/>
        public event EditBookCompletedEventHandler EditBookCompleted;
        
        /// <remarks/>
        public event DeleteBookCompletedEventHandler DeleteBookCompleted;
        
        /// <remarks/>
        public event SaveDocumentsInstProgrammesCompletedEventHandler SaveDocumentsInstProgrammesCompleted;
        
        /// <remarks/>
        public event ConfirmPaymentsInstitutionCompletedEventHandler ConfirmPaymentsInstitutionCompleted;
        
        /// <remarks/>
        public event EditCourseLearningOutcomeCompletedEventHandler EditCourseLearningOutcomeCompleted;
        
        /// <remarks/>
        public event DeleteCourseLearningOutcomeCompletedEventHandler DeleteCourseLearningOutcomeCompleted;
        
        /// <remarks/>
        public event DeleteProgramRationaleCompletedEventHandler DeleteProgramRationaleCompleted;
        
        /// <remarks/>
        public event InstitutionCreateinvoiceCompletedEventHandler InstitutionCreateinvoiceCompleted;
        
        /// <remarks/>
        public event GetOutComenNumberCompletedEventHandler GetOutComenNumberCompleted;
        
        /// <remarks/>
        public event FnUserHelpEmaiRequestCompletedEventHandler FnUserHelpEmaiRequestCompleted;
        
        /// <remarks/>
        public event AddUniversityChancellorsCompletedEventHandler AddUniversityChancellorsCompleted;
        
        /// <remarks/>
        public event InitialGeneralDetailsCompletedEventHandler InitialGeneralDetailsCompleted;
        
        /// <remarks/>
        public event AddProgramRationaleCompletedEventHandler AddProgramRationaleCompleted;
        
        /// <remarks/>
        public event ValidateProgramRationaleCompletedEventHandler ValidateProgramRationaleCompleted;
        
        /// <remarks/>
        public event FnGenerateExitReportCompletedEventHandler FnGenerateExitReportCompleted;
        
        /// <remarks/>
        public event FnGenerateProgrammeFeedbackVoucherCompletedEventHandler FnGenerateProgrammeFeedbackVoucherCompleted;
        
        /// <remarks/>
        public event FnGenerateProgrammeEvaluationTooolCompletedEventHandler FnGenerateProgrammeEvaluationTooolCompleted;
        
        /// <remarks/>
        public event PortalResetPasswordCompletedEventHandler PortalResetPasswordCompleted;
        
        /// <remarks/>
        public event FngetRationaleDescriptionCompletedEventHandler FngetRationaleDescriptionCompleted;
        
        /// <remarks/>
        public event FngetUniversityDomainCompletedEventHandler FngetUniversityDomainCompleted;
        
        /// <remarks/>
        public event FnuseraccountcreationCompletedEventHandler FnuseraccountcreationCompleted;
        
        /// <remarks/>
        public event FnceateapplicationLinesCompletedEventHandler FnceateapplicationLinesCompleted;
        
        /// <remarks/>
        public event AccreditationApplicationCompletedEventHandler AccreditationApplicationCompleted;
        
        /// <remarks/>
        public event CreateCampusCompletedEventHandler CreateCampusCompleted;
        
        /// <remarks/>
        public event CreateOptionResponceCompletedEventHandler CreateOptionResponceCompleted;
        
        /// <remarks/>
        public event CreatAccreditationResponceCompletedEventHandler CreatAccreditationResponceCompleted;
        
        /// <remarks/>
        public event CreateStaffCompletedEventHandler CreateStaffCompleted;
        
        /// <remarks/>
        public event CreateTrainersCompletedEventHandler CreateTrainersCompleted;
        
        /// <remarks/>
        public event SittingCapacityCompletedEventHandler SittingCapacityCompleted;
        
        /// <remarks/>
        public event CreateRecomBooksCompletedEventHandler CreateRecomBooksCompleted;
        
        /// <remarks/>
        public event CreateComputerLabCompletedEventHandler CreateComputerLabCompleted;
        
        /// <remarks/>
        public event CreateCompDetailsCompletedEventHandler CreateCompDetailsCompleted;
        
        /// <remarks/>
        public event CreateICTAccessoryCompletedEventHandler CreateICTAccessoryCompleted;
        
        /// <remarks/>
        public event DeleteCampusLineCompletedEventHandler DeleteCampusLineCompleted;
        
        /// <remarks/>
        public event DeletestaffLineCompletedEventHandler DeletestaffLineCompleted;
        
        /// <remarks/>
        public event DeletetrainerLineCompletedEventHandler DeletetrainerLineCompleted;
        
        /// <remarks/>
        public event DeleteclassLineCompletedEventHandler DeleteclassLineCompleted;
        
        /// <remarks/>
        public event DeleteRefBookLineCompletedEventHandler DeleteRefBookLineCompleted;
        
        /// <remarks/>
        public event DeleteCompLineCompletedEventHandler DeleteCompLineCompleted;
        
        /// <remarks/>
        public event DeleteCompDetailsLineCompletedEventHandler DeleteCompDetailsLineCompleted;
        
        /// <remarks/>
        public event SelfEvaluationResponceCompletedEventHandler SelfEvaluationResponceCompleted;
        
        /// <remarks/>
        public event PrintCertificateCompletedEventHandler PrintCertificateCompleted;
        
        /// <remarks/>
        public event SubmitApplicationCompletedEventHandler SubmitApplicationCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event CreatAccreditationSubQResponceCompletedEventHandler CreatAccreditationSubQResponceCompleted;
        
        /// <remarks/>
        public event DeleteICTLineCompletedEventHandler DeleteICTLineCompleted;
        
        /// <remarks/>
        public event SelfEvalutionApplicationCompletedEventHandler SelfEvalutionApplicationCompleted;
        
        /// <remarks/>
        public event PrintScoreCompletedEventHandler PrintScoreCompleted;
        
        /// <remarks/>
        public event PrintdetailedReportCompletedEventHandler PrintdetailedReportCompleted;
        
        /// <remarks/>
        public event ConfirmAccreditationPaymentCompletedEventHandler ConfirmAccreditationPaymentCompleted;
        
        /// <remarks/>
        public event FnCreateApplicantAccountRequestCompletedEventHandler FnCreateApplicantAccountRequestCompleted;
        
        /// <remarks/>
        public event PrintdApplicationReportCompletedEventHandler PrintdApplicationReportCompleted;
        
        /// <remarks/>
        public event SendEmailAccountCreationCompletedEventHandler SendEmailAccountCreationCompleted;
        
        /// <remarks/>
        public event PrintdsummeryscoreCompletedEventHandler PrintdsummeryscoreCompleted;
        
        /// <remarks/>
        public event FnResetPasswordCompletedEventHandler FnResetPasswordCompleted;
        
        /// <remarks/>
        public event ResetSendEmailCompletedEventHandler ResetSendEmailCompleted;
        
        /// <remarks/>
        public event FnChangeStudentPasswordCompletedEventHandler FnChangeStudentPasswordCompleted;
        
        /// <remarks/>
        public event AddAccreditationSharepointLinksCompletedEventHandler AddAccreditationSharepointLinksCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetApplicationNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetApplicationNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetApplicationNumber(string usercode) {
            object[] results = this.Invoke("GetApplicationNumber", new object[] {
                        usercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationNumberAsync(string usercode) {
            this.GetApplicationNumberAsync(usercode, null);
        }
        
        /// <remarks/>
        public void GetApplicationNumberAsync(string usercode, object userState) {
            if ((this.GetApplicationNumberOperationCompleted == null)) {
                this.GetApplicationNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationNumberOperationCompleted);
            }
            this.InvokeAsync("GetApplicationNumber", new object[] {
                        usercode}, this.GetApplicationNumberOperationCompleted, userState);
        }
        
        private void OnGetApplicationNumberOperationCompleted(object arg) {
            if ((this.GetApplicationNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationNumberCompleted(this, new GetApplicationNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ConfirmPayment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ConfirmPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConfirmPayment(string universityCode) {
            this.Invoke("ConfirmPayment", new object[] {
                        universityCode});
        }
        
        /// <remarks/>
        public void ConfirmPaymentAsync(string universityCode) {
            this.ConfirmPaymentAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void ConfirmPaymentAsync(string universityCode, object userState) {
            if ((this.ConfirmPaymentOperationCompleted == null)) {
                this.ConfirmPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmPaymentOperationCompleted);
            }
            this.InvokeAsync("ConfirmPayment", new object[] {
                        universityCode}, this.ConfirmPaymentOperationCompleted, userState);
        }
        
        private void OnConfirmPaymentOperationCompleted(object arg) {
            if ((this.ConfirmPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Approve", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Approve_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool Approve(string category, string userId, string password, bool action) {
            object[] results = this.Invoke("Approve", new object[] {
                        category,
                        userId,
                        password,
                        action});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveAsync(string category, string userId, string password, bool action) {
            this.ApproveAsync(category, userId, password, action, null);
        }
        
        /// <remarks/>
        public void ApproveAsync(string category, string userId, string password, bool action, object userState) {
            if ((this.ApproveOperationCompleted == null)) {
                this.ApproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveOperationCompleted);
            }
            this.InvokeAsync("Approve", new object[] {
                        category,
                        userId,
                        password,
                        action}, this.ApproveOperationCompleted, userState);
        }
        
        private void OnApproveOperationCompleted(object arg) {
            if ((this.ApproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveCompleted(this, new ApproveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApplyForAccreditation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApplyForAccreditation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyForAccreditation(string proposedName, string postaddress, string postcode, string email, string accreditationType, string institutionwebsite, string kraPin, string tConstituency, string phonenumber, string userCode, string userPassword) {
            object[] results = this.Invoke("ApplyForAccreditation", new object[] {
                        proposedName,
                        postaddress,
                        postcode,
                        email,
                        accreditationType,
                        institutionwebsite,
                        kraPin,
                        tConstituency,
                        phonenumber,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyForAccreditationAsync(string proposedName, string postaddress, string postcode, string email, string accreditationType, string institutionwebsite, string kraPin, string tConstituency, string phonenumber, string userCode, string userPassword) {
            this.ApplyForAccreditationAsync(proposedName, postaddress, postcode, email, accreditationType, institutionwebsite, kraPin, tConstituency, phonenumber, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void ApplyForAccreditationAsync(string proposedName, string postaddress, string postcode, string email, string accreditationType, string institutionwebsite, string kraPin, string tConstituency, string phonenumber, string userCode, string userPassword, object userState) {
            if ((this.ApplyForAccreditationOperationCompleted == null)) {
                this.ApplyForAccreditationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyForAccreditationOperationCompleted);
            }
            this.InvokeAsync("ApplyForAccreditation", new object[] {
                        proposedName,
                        postaddress,
                        postcode,
                        email,
                        accreditationType,
                        institutionwebsite,
                        kraPin,
                        tConstituency,
                        phonenumber,
                        userCode,
                        userPassword}, this.ApplyForAccreditationOperationCompleted, userState);
        }
        
        private void OnApplyForAccreditationOperationCompleted(object arg) {
            if ((this.ApplyForAccreditationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyForAccreditationCompleted(this, new ApplyForAccreditationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteSponsors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteSponsors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteSponsors(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteSponsors", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSponsorsAsync(int entryNo, string user, string password) {
            this.DeleteSponsorsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteSponsorsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteSponsorsOperationCompleted == null)) {
                this.DeleteSponsorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSponsorsOperationCompleted);
            }
            this.InvokeAsync("DeleteSponsors", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteSponsorsOperationCompleted, userState);
        }
        
        private void OnDeleteSponsorsOperationCompleted(object arg) {
            if ((this.DeleteSponsorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSponsorsCompleted(this, new DeleteSponsorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteDepartments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteDepartments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteDepartments(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteDepartments", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDepartmentsAsync(int entryNo, string user, string password) {
            this.DeleteDepartmentsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteDepartmentsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteDepartmentsOperationCompleted == null)) {
                this.DeleteDepartmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDepartmentsOperationCompleted);
            }
            this.InvokeAsync("DeleteDepartments", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteDepartmentsOperationCompleted, userState);
        }
        
        private void OnDeleteDepartmentsOperationCompleted(object arg) {
            if ((this.DeleteDepartmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDepartmentsCompleted(this, new DeleteDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteSchools", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteSchools_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteSchools(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteSchools", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSchoolsAsync(int entryNo, string user, string password) {
            this.DeleteSchoolsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteSchoolsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteSchoolsOperationCompleted == null)) {
                this.DeleteSchoolsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSchoolsOperationCompleted);
            }
            this.InvokeAsync("DeleteSchools", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteSchoolsOperationCompleted, userState);
        }
        
        private void OnDeleteSchoolsOperationCompleted(object arg) {
            if ((this.DeleteSchoolsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSchoolsCompleted(this, new DeleteSchoolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAffiliations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAffiliations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteAffiliations(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteAffiliations", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAffiliationsAsync(int entryNo, string user, string password) {
            this.DeleteAffiliationsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteAffiliationsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteAffiliationsOperationCompleted == null)) {
                this.DeleteAffiliationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAffiliationsOperationCompleted);
            }
            this.InvokeAsync("DeleteAffiliations", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteAffiliationsOperationCompleted, userState);
        }
        
        private void OnDeleteAffiliationsOperationCompleted(object arg) {
            if ((this.DeleteAffiliationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAffiliationsCompleted(this, new DeleteAffiliationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteChancellors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteChancellors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteChancellors(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteChancellors", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteChancellorsAsync(int entryNo, string user, string password) {
            this.DeleteChancellorsAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteChancellorsAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteChancellorsOperationCompleted == null)) {
                this.DeleteChancellorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteChancellorsOperationCompleted);
            }
            this.InvokeAsync("DeleteChancellors", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteChancellorsOperationCompleted, userState);
        }
        
        private void OnDeleteChancellorsOperationCompleted(object arg) {
            if ((this.DeleteChancellorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteChancellorsCompleted(this, new DeleteChancellorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetInstitutionNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetInstitutionNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetInstitutionNumber(string userCode, string password) {
            object[] results = this.Invoke("GetInstitutionNumber", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstitutionNumberAsync(string userCode, string password) {
            this.GetInstitutionNumberAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void GetInstitutionNumberAsync(string userCode, string password, object userState) {
            if ((this.GetInstitutionNumberOperationCompleted == null)) {
                this.GetInstitutionNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstitutionNumberOperationCompleted);
            }
            this.InvokeAsync("GetInstitutionNumber", new object[] {
                        userCode,
                        password}, this.GetInstitutionNumberOperationCompleted, userState);
        }
        
        private void OnGetInstitutionNumberOperationCompleted(object arg) {
            if ((this.GetInstitutionNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstitutionNumberCompleted(this, new GetInstitutionNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Deletekeymilestone", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Deletekeymilestone_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Deletekeymilestone(int milestoneCode, string userCode, string userPassword) {
            object[] results = this.Invoke("Deletekeymilestone", new object[] {
                        milestoneCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletekeymilestoneAsync(int milestoneCode, string userCode, string userPassword) {
            this.DeletekeymilestoneAsync(milestoneCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeletekeymilestoneAsync(int milestoneCode, string userCode, string userPassword, object userState) {
            if ((this.DeletekeymilestoneOperationCompleted == null)) {
                this.DeletekeymilestoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletekeymilestoneOperationCompleted);
            }
            this.InvokeAsync("Deletekeymilestone", new object[] {
                        milestoneCode,
                        userCode,
                        userPassword}, this.DeletekeymilestoneOperationCompleted, userState);
        }
        
        private void OnDeletekeymilestoneOperationCompleted(object arg) {
            if ((this.DeletekeymilestoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletekeymilestoneCompleted(this, new DeletekeymilestoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditChancellors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditChancellors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditChancellors(string universitycode, string name, string qualifications, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime appointmentdate, string nationality, string userCode, string userPassword) {
            object[] results = this.Invoke("EditChancellors", new object[] {
                        universitycode,
                        name,
                        qualifications,
                        appointmentdate,
                        nationality,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditChancellorsAsync(string universitycode, string name, string qualifications, System.DateTime appointmentdate, string nationality, string userCode, string userPassword) {
            this.EditChancellorsAsync(universitycode, name, qualifications, appointmentdate, nationality, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditChancellorsAsync(string universitycode, string name, string qualifications, System.DateTime appointmentdate, string nationality, string userCode, string userPassword, object userState) {
            if ((this.EditChancellorsOperationCompleted == null)) {
                this.EditChancellorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditChancellorsOperationCompleted);
            }
            this.InvokeAsync("EditChancellors", new object[] {
                        universitycode,
                        name,
                        qualifications,
                        appointmentdate,
                        nationality,
                        userCode,
                        userPassword}, this.EditChancellorsOperationCompleted, userState);
        }
        
        private void OnEditChancellorsOperationCompleted(object arg) {
            if ((this.EditChancellorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditChancellorsCompleted(this, new EditChancellorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditAffiliations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditAffiliations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditAffiliations(string universitycode, int affilicationcode, string name, string affiliationcountry, string organisationname, string userCode, string userPassword) {
            object[] results = this.Invoke("EditAffiliations", new object[] {
                        universitycode,
                        affilicationcode,
                        name,
                        affiliationcountry,
                        organisationname,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditAffiliationsAsync(string universitycode, int affilicationcode, string name, string affiliationcountry, string organisationname, string userCode, string userPassword) {
            this.EditAffiliationsAsync(universitycode, affilicationcode, name, affiliationcountry, organisationname, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditAffiliationsAsync(string universitycode, int affilicationcode, string name, string affiliationcountry, string organisationname, string userCode, string userPassword, object userState) {
            if ((this.EditAffiliationsOperationCompleted == null)) {
                this.EditAffiliationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditAffiliationsOperationCompleted);
            }
            this.InvokeAsync("EditAffiliations", new object[] {
                        universitycode,
                        affilicationcode,
                        name,
                        affiliationcountry,
                        organisationname,
                        userCode,
                        userPassword}, this.EditAffiliationsOperationCompleted, userState);
        }
        
        private void OnEditAffiliationsOperationCompleted(object arg) {
            if ((this.EditAffiliationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditAffiliationsCompleted(this, new EditAffiliationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditSponsor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditSponsor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditSponsor(string universitycode, string name, string userCode, string userPassword) {
            object[] results = this.Invoke("EditSponsor", new object[] {
                        universitycode,
                        name,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditSponsorAsync(string universitycode, string name, string userCode, string userPassword) {
            this.EditSponsorAsync(universitycode, name, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditSponsorAsync(string universitycode, string name, string userCode, string userPassword, object userState) {
            if ((this.EditSponsorOperationCompleted == null)) {
                this.EditSponsorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSponsorOperationCompleted);
            }
            this.InvokeAsync("EditSponsor", new object[] {
                        universitycode,
                        name,
                        userCode,
                        userPassword}, this.EditSponsorOperationCompleted, userState);
        }
        
        private void OnEditSponsorOperationCompleted(object arg) {
            if ((this.EditSponsorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSponsorCompleted(this, new EditSponsorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditKeyMilestones", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditKeyMilestones_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditKeyMilestones(string universitycode, int code, string year, string milestone, string userCode, string userPassword) {
            object[] results = this.Invoke("EditKeyMilestones", new object[] {
                        universitycode,
                        code,
                        year,
                        milestone,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditKeyMilestonesAsync(string universitycode, int code, string year, string milestone, string userCode, string userPassword) {
            this.EditKeyMilestonesAsync(universitycode, code, year, milestone, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditKeyMilestonesAsync(string universitycode, int code, string year, string milestone, string userCode, string userPassword, object userState) {
            if ((this.EditKeyMilestonesOperationCompleted == null)) {
                this.EditKeyMilestonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditKeyMilestonesOperationCompleted);
            }
            this.InvokeAsync("EditKeyMilestones", new object[] {
                        universitycode,
                        code,
                        year,
                        milestone,
                        userCode,
                        userPassword}, this.EditKeyMilestonesOperationCompleted, userState);
        }
        
        private void OnEditKeyMilestonesOperationCompleted(object arg) {
            if ((this.EditKeyMilestonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditKeyMilestonesCompleted(this, new EditKeyMilestonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditSchool", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditSchool_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditSchool(string universitycode, int schoolcode, string name, string userCode, string userPassword) {
            object[] results = this.Invoke("EditSchool", new object[] {
                        universitycode,
                        schoolcode,
                        name,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditSchoolAsync(string universitycode, int schoolcode, string name, string userCode, string userPassword) {
            this.EditSchoolAsync(universitycode, schoolcode, name, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditSchoolAsync(string universitycode, int schoolcode, string name, string userCode, string userPassword, object userState) {
            if ((this.EditSchoolOperationCompleted == null)) {
                this.EditSchoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSchoolOperationCompleted);
            }
            this.InvokeAsync("EditSchool", new object[] {
                        universitycode,
                        schoolcode,
                        name,
                        userCode,
                        userPassword}, this.EditSchoolOperationCompleted, userState);
        }
        
        private void OnEditSchoolOperationCompleted(object arg) {
            if ((this.EditSchoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSchoolCompleted(this, new EditSchoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditDepartment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditDepartment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditDepartment(string universitycode, int departmentcode, string school, string department, string userCode, string userPassword) {
            object[] results = this.Invoke("EditDepartment", new object[] {
                        universitycode,
                        departmentcode,
                        school,
                        department,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditDepartmentAsync(string universitycode, int departmentcode, string school, string department, string userCode, string userPassword) {
            this.EditDepartmentAsync(universitycode, departmentcode, school, department, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditDepartmentAsync(string universitycode, int departmentcode, string school, string department, string userCode, string userPassword, object userState) {
            if ((this.EditDepartmentOperationCompleted == null)) {
                this.EditDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDepartmentOperationCompleted);
            }
            this.InvokeAsync("EditDepartment", new object[] {
                        universitycode,
                        departmentcode,
                        school,
                        department,
                        userCode,
                        userPassword}, this.EditDepartmentOperationCompleted, userState);
        }
        
        private void OnEditDepartmentOperationCompleted(object arg) {
            if ((this.EditDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDepartmentCompleted(this, new EditDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditGeneralDetails(string universityCode, int statusCategory, int institutionSponsor, string institutionEmailAddress, string institutionPhoneNumber, string institutionPostAddress, string institutionPostCode, string mainCampusCounty, string mainCampusConstituency, string mainCampusTown) {
            object[] results = this.Invoke("EditGeneralDetails", new object[] {
                        universityCode,
                        statusCategory,
                        institutionSponsor,
                        institutionEmailAddress,
                        institutionPhoneNumber,
                        institutionPostAddress,
                        institutionPostCode,
                        mainCampusCounty,
                        mainCampusConstituency,
                        mainCampusTown});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditGeneralDetailsAsync(string universityCode, int statusCategory, int institutionSponsor, string institutionEmailAddress, string institutionPhoneNumber, string institutionPostAddress, string institutionPostCode, string mainCampusCounty, string mainCampusConstituency, string mainCampusTown) {
            this.EditGeneralDetailsAsync(universityCode, statusCategory, institutionSponsor, institutionEmailAddress, institutionPhoneNumber, institutionPostAddress, institutionPostCode, mainCampusCounty, mainCampusConstituency, mainCampusTown, null);
        }
        
        /// <remarks/>
        public void EditGeneralDetailsAsync(string universityCode, int statusCategory, int institutionSponsor, string institutionEmailAddress, string institutionPhoneNumber, string institutionPostAddress, string institutionPostCode, string mainCampusCounty, string mainCampusConstituency, string mainCampusTown, object userState) {
            if ((this.EditGeneralDetailsOperationCompleted == null)) {
                this.EditGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("EditGeneralDetails", new object[] {
                        universityCode,
                        statusCategory,
                        institutionSponsor,
                        institutionEmailAddress,
                        institutionPhoneNumber,
                        institutionPostAddress,
                        institutionPostCode,
                        mainCampusCounty,
                        mainCampusConstituency,
                        mainCampusTown}, this.EditGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnEditGeneralDetailsOperationCompleted(object arg) {
            if ((this.EditGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditGeneralDetailsCompleted(this, new EditGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddMissionDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddMissionDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddMissionDetails(string universityCode, string mission, string vission, string aims) {
            object[] results = this.Invoke("AddMissionDetails", new object[] {
                        universityCode,
                        mission,
                        vission,
                        aims});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddMissionDetailsAsync(string universityCode, string mission, string vission, string aims) {
            this.AddMissionDetailsAsync(universityCode, mission, vission, aims, null);
        }
        
        /// <remarks/>
        public void AddMissionDetailsAsync(string universityCode, string mission, string vission, string aims, object userState) {
            if ((this.AddMissionDetailsOperationCompleted == null)) {
                this.AddMissionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMissionDetailsOperationCompleted);
            }
            this.InvokeAsync("AddMissionDetails", new object[] {
                        universityCode,
                        mission,
                        vission,
                        aims}, this.AddMissionDetailsOperationCompleted, userState);
        }
        
        private void OnAddMissionDetailsOperationCompleted(object arg) {
            if ((this.AddMissionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMissionDetailsCompleted(this, new AddMissionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPhilosophy", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPhilosophy_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPhilosophy(string universityCode, string philosophicalbasis) {
            object[] results = this.Invoke("AddPhilosophy", new object[] {
                        universityCode,
                        philosophicalbasis});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPhilosophyAsync(string universityCode, string philosophicalbasis) {
            this.AddPhilosophyAsync(universityCode, philosophicalbasis, null);
        }
        
        /// <remarks/>
        public void AddPhilosophyAsync(string universityCode, string philosophicalbasis, object userState) {
            if ((this.AddPhilosophyOperationCompleted == null)) {
                this.AddPhilosophyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPhilosophyOperationCompleted);
            }
            this.InvokeAsync("AddPhilosophy", new object[] {
                        universityCode,
                        philosophicalbasis}, this.AddPhilosophyOperationCompleted, userState);
        }
        
        private void OnAddPhilosophyOperationCompleted(object arg) {
            if ((this.AddPhilosophyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPhilosophyCompleted(this, new AddPhilosophyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddMilestone", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddMilestone_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddMilestone(string universityCode, string milestoneyear, string milestonedescription) {
            object[] results = this.Invoke("AddMilestone", new object[] {
                        universityCode,
                        milestoneyear,
                        milestonedescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddMilestoneAsync(string universityCode, string milestoneyear, string milestonedescription) {
            this.AddMilestoneAsync(universityCode, milestoneyear, milestonedescription, null);
        }
        
        /// <remarks/>
        public void AddMilestoneAsync(string universityCode, string milestoneyear, string milestonedescription, object userState) {
            if ((this.AddMilestoneOperationCompleted == null)) {
                this.AddMilestoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMilestoneOperationCompleted);
            }
            this.InvokeAsync("AddMilestone", new object[] {
                        universityCode,
                        milestoneyear,
                        milestonedescription}, this.AddMilestoneOperationCompleted, userState);
        }
        
        private void OnAddMilestoneOperationCompleted(object arg) {
            if ((this.AddMilestoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMilestoneCompleted(this, new AddMilestoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAffiliations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAffiliations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAffiliations(string universityCode, string affiliationdescription, string countryname, string organisationname) {
            object[] results = this.Invoke("AddAffiliations", new object[] {
                        universityCode,
                        affiliationdescription,
                        countryname,
                        organisationname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAffiliationsAsync(string universityCode, string affiliationdescription, string countryname, string organisationname) {
            this.AddAffiliationsAsync(universityCode, affiliationdescription, countryname, organisationname, null);
        }
        
        /// <remarks/>
        public void AddAffiliationsAsync(string universityCode, string affiliationdescription, string countryname, string organisationname, object userState) {
            if ((this.AddAffiliationsOperationCompleted == null)) {
                this.AddAffiliationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAffiliationsOperationCompleted);
            }
            this.InvokeAsync("AddAffiliations", new object[] {
                        universityCode,
                        affiliationdescription,
                        countryname,
                        organisationname}, this.AddAffiliationsOperationCompleted, userState);
        }
        
        private void OnAddAffiliationsOperationCompleted(object arg) {
            if ((this.AddAffiliationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAffiliationsCompleted(this, new AddAffiliationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddschoolFaculties", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddschoolFaculties_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddschoolFaculties(string universityCode, string facultydescription) {
            object[] results = this.Invoke("AddschoolFaculties", new object[] {
                        universityCode,
                        facultydescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddschoolFacultiesAsync(string universityCode, string facultydescription) {
            this.AddschoolFacultiesAsync(universityCode, facultydescription, null);
        }
        
        /// <remarks/>
        public void AddschoolFacultiesAsync(string universityCode, string facultydescription, object userState) {
            if ((this.AddschoolFacultiesOperationCompleted == null)) {
                this.AddschoolFacultiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddschoolFacultiesOperationCompleted);
            }
            this.InvokeAsync("AddschoolFaculties", new object[] {
                        universityCode,
                        facultydescription}, this.AddschoolFacultiesOperationCompleted, userState);
        }
        
        private void OnAddschoolFacultiesOperationCompleted(object arg) {
            if ((this.AddschoolFacultiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddschoolFacultiesCompleted(this, new AddschoolFacultiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDepartments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDepartments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDepartments(string universityCode, string schoolcode, string departmentname) {
            object[] results = this.Invoke("AddDepartments", new object[] {
                        universityCode,
                        schoolcode,
                        departmentname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDepartmentsAsync(string universityCode, string schoolcode, string departmentname) {
            this.AddDepartmentsAsync(universityCode, schoolcode, departmentname, null);
        }
        
        /// <remarks/>
        public void AddDepartmentsAsync(string universityCode, string schoolcode, string departmentname, object userState) {
            if ((this.AddDepartmentsOperationCompleted == null)) {
                this.AddDepartmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDepartmentsOperationCompleted);
            }
            this.InvokeAsync("AddDepartments", new object[] {
                        universityCode,
                        schoolcode,
                        departmentname}, this.AddDepartmentsOperationCompleted, userState);
        }
        
        private void OnAddDepartmentsOperationCompleted(object arg) {
            if ((this.AddDepartmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDepartmentsCompleted(this, new AddDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSponsors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSponsors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSponsors(string universityCode, string sponsorname) {
            object[] results = this.Invoke("AddSponsors", new object[] {
                        universityCode,
                        sponsorname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSponsorsAsync(string universityCode, string sponsorname) {
            this.AddSponsorsAsync(universityCode, sponsorname, null);
        }
        
        /// <remarks/>
        public void AddSponsorsAsync(string universityCode, string sponsorname, object userState) {
            if ((this.AddSponsorsOperationCompleted == null)) {
                this.AddSponsorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSponsorsOperationCompleted);
            }
            this.InvokeAsync("AddSponsors", new object[] {
                        universityCode,
                        sponsorname}, this.AddSponsorsOperationCompleted, userState);
        }
        
        private void OnAddSponsorsOperationCompleted(object arg) {
            if ((this.AddSponsorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSponsorsCompleted(this, new AddSponsorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddHistory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddHistory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddHistory(string universityCode, string history) {
            object[] results = this.Invoke("AddHistory", new object[] {
                        universityCode,
                        history});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHistoryAsync(string universityCode, string history) {
            this.AddHistoryAsync(universityCode, history, null);
        }
        
        /// <remarks/>
        public void AddHistoryAsync(string universityCode, string history, object userState) {
            if ((this.AddHistoryOperationCompleted == null)) {
                this.AddHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHistoryOperationCompleted);
            }
            this.InvokeAsync("AddHistory", new object[] {
                        universityCode,
                        history}, this.AddHistoryOperationCompleted, userState);
        }
        
        private void OnAddHistoryOperationCompleted(object arg) {
            if ((this.AddHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHistoryCompleted(this, new AddHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Editphylosophy", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Editphylosophy_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Editphylosophy(string universityCode, string phylosophydetails) {
            object[] results = this.Invoke("Editphylosophy", new object[] {
                        universityCode,
                        phylosophydetails});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditphylosophyAsync(string universityCode, string phylosophydetails) {
            this.EditphylosophyAsync(universityCode, phylosophydetails, null);
        }
        
        /// <remarks/>
        public void EditphylosophyAsync(string universityCode, string phylosophydetails, object userState) {
            if ((this.EditphylosophyOperationCompleted == null)) {
                this.EditphylosophyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditphylosophyOperationCompleted);
            }
            this.InvokeAsync("Editphylosophy", new object[] {
                        universityCode,
                        phylosophydetails}, this.EditphylosophyOperationCompleted, userState);
        }
        
        private void OnEditphylosophyOperationCompleted(object arg) {
            if ((this.EditphylosophyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditphylosophyCompleted(this, new EditphylosophyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateLearningOutcome2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateLearningOutcome2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateLearningOutcome2(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateLearningOutcome2", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateLearningOutcome2Async(string accreditationNo, string userCode, string password) {
            this.ValidateLearningOutcome2Async(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateLearningOutcome2Async(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateLearningOutcome2OperationCompleted == null)) {
                this.ValidateLearningOutcome2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateLearningOutcome2OperationCompleted);
            }
            this.InvokeAsync("ValidateLearningOutcome2", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateLearningOutcome2OperationCompleted, userState);
        }
        
        private void OnValidateLearningOutcome2OperationCompleted(object arg) {
            if ((this.ValidateLearningOutcome2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateLearningOutcome2Completed(this, new ValidateLearningOutcome2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLearningOutcome(string accreditationNo, string outcomeDescription, string outcomenomber, string userCode, string password) {
            object[] results = this.Invoke("AddLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeDescription,
                        outcomenomber,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLearningOutcomeAsync(string accreditationNo, string outcomeDescription, string outcomenomber, string userCode, string password) {
            this.AddLearningOutcomeAsync(accreditationNo, outcomeDescription, outcomenomber, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddLearningOutcomeAsync(string accreditationNo, string outcomeDescription, string outcomenomber, string userCode, string password, object userState) {
            if ((this.AddLearningOutcomeOperationCompleted == null)) {
                this.AddLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("AddLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeDescription,
                        outcomenomber,
                        userCode,
                        password}, this.AddLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnAddLearningOutcomeOperationCompleted(object arg) {
            if ((this.AddLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLearningOutcomeCompleted(this, new AddLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditProgramRationale(int rationaleCode, string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            object[] results = this.Invoke("EditProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditProgramRationaleAsync(int rationaleCode, string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            this.EditProgramRationaleAsync(rationaleCode, accreditationNo, rationaleCategory, rationaleDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditProgramRationaleAsync(int rationaleCode, string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password, object userState) {
            if ((this.EditProgramRationaleOperationCompleted == null)) {
                this.EditProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("EditProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password}, this.EditProgramRationaleOperationCompleted, userState);
        }
        
        private void OnEditProgramRationaleOperationCompleted(object arg) {
            if ((this.EditProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditProgramRationaleCompleted(this, new EditProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditSpecializationAreas", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditSpecializationAreas_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditSpecializationAreas(int specializationCode, string accreditationNo, string specializationarea, string specializationdescription, string userCode, string password) {
            object[] results = this.Invoke("EditSpecializationAreas", new object[] {
                        specializationCode,
                        accreditationNo,
                        specializationarea,
                        specializationdescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditSpecializationAreasAsync(int specializationCode, string accreditationNo, string specializationarea, string specializationdescription, string userCode, string password) {
            this.EditSpecializationAreasAsync(specializationCode, accreditationNo, specializationarea, specializationdescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditSpecializationAreasAsync(int specializationCode, string accreditationNo, string specializationarea, string specializationdescription, string userCode, string password, object userState) {
            if ((this.EditSpecializationAreasOperationCompleted == null)) {
                this.EditSpecializationAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSpecializationAreasOperationCompleted);
            }
            this.InvokeAsync("EditSpecializationAreas", new object[] {
                        specializationCode,
                        accreditationNo,
                        specializationarea,
                        specializationdescription,
                        userCode,
                        password}, this.EditSpecializationAreasOperationCompleted, userState);
        }
        
        private void OnEditSpecializationAreasOperationCompleted(object arg) {
            if ((this.EditSpecializationAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSpecializationAreasCompleted(this, new EditSpecializationAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSpecializationAreas", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSpecializationAreas_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSpecializationAreas(string accreditationNo, string specializationaraea, string specializationdescription, string userCode, string password) {
            object[] results = this.Invoke("AddSpecializationAreas", new object[] {
                        accreditationNo,
                        specializationaraea,
                        specializationdescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSpecializationAreasAsync(string accreditationNo, string specializationaraea, string specializationdescription, string userCode, string password) {
            this.AddSpecializationAreasAsync(accreditationNo, specializationaraea, specializationdescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSpecializationAreasAsync(string accreditationNo, string specializationaraea, string specializationdescription, string userCode, string password, object userState) {
            if ((this.AddSpecializationAreasOperationCompleted == null)) {
                this.AddSpecializationAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSpecializationAreasOperationCompleted);
            }
            this.InvokeAsync("AddSpecializationAreas", new object[] {
                        accreditationNo,
                        specializationaraea,
                        specializationdescription,
                        userCode,
                        password}, this.AddSpecializationAreasOperationCompleted, userState);
        }
        
        private void OnAddSpecializationAreasOperationCompleted(object arg) {
            if ((this.AddSpecializationAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSpecializationAreasCompleted(this, new AddSpecializationAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditLearningOutcome(string accreditationNo, int outcomeCode, string outcomeDescription, string userCode, string password) {
            object[] results = this.Invoke("EditLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        outcomeDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLearningOutcomeAsync(string accreditationNo, int outcomeCode, string outcomeDescription, string userCode, string password) {
            this.EditLearningOutcomeAsync(accreditationNo, outcomeCode, outcomeDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditLearningOutcomeAsync(string accreditationNo, int outcomeCode, string outcomeDescription, string userCode, string password, object userState) {
            if ((this.EditLearningOutcomeOperationCompleted == null)) {
                this.EditLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("EditLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        outcomeDescription,
                        userCode,
                        password}, this.EditLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnEditLearningOutcomeOperationCompleted(object arg) {
            if ((this.EditLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLearningOutcomeCompleted(this, new EditLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLearningOutcome(string accreditationNo, int outcomeCode, string usercode, string password) {
            object[] results = this.Invoke("DeleteLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLearningOutcomeAsync(string accreditationNo, int outcomeCode, string usercode, string password) {
            this.DeleteLearningOutcomeAsync(accreditationNo, outcomeCode, usercode, password, null);
        }
        
        /// <remarks/>
        public void DeleteLearningOutcomeAsync(string accreditationNo, int outcomeCode, string usercode, string password, object userState) {
            if ((this.DeleteLearningOutcomeOperationCompleted == null)) {
                this.DeleteLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("DeleteLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        usercode,
                        password}, this.DeleteLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnDeleteLearningOutcomeOperationCompleted(object arg) {
            if ((this.DeleteLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLearningOutcomeCompleted(this, new DeleteLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteSpecializationArea", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteSpecializationArea_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteSpecializationArea(string accreditationNo, int specializationcode, string userCode, string password) {
            object[] results = this.Invoke("DeleteSpecializationArea", new object[] {
                        accreditationNo,
                        specializationcode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSpecializationAreaAsync(string accreditationNo, int specializationcode, string userCode, string password) {
            this.DeleteSpecializationAreaAsync(accreditationNo, specializationcode, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteSpecializationAreaAsync(string accreditationNo, int specializationcode, string userCode, string password, object userState) {
            if ((this.DeleteSpecializationAreaOperationCompleted == null)) {
                this.DeleteSpecializationAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSpecializationAreaOperationCompleted);
            }
            this.InvokeAsync("DeleteSpecializationArea", new object[] {
                        accreditationNo,
                        specializationcode,
                        userCode,
                        password}, this.DeleteSpecializationAreaOperationCompleted, userState);
        }
        
        private void OnDeleteSpecializationAreaOperationCompleted(object arg) {
            if ((this.DeleteSpecializationAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSpecializationAreaCompleted(this, new DeleteSpecializationAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDeliveryMode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDeliveryMode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDeliveryMode(string accreditationNo, string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("AddDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password) {
            this.AddDeliveryModeAsync(accreditationNo, deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password, object userState) {
            if ((this.AddDeliveryModeOperationCompleted == null)) {
                this.AddDeliveryModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDeliveryModeOperationCompleted);
            }
            this.InvokeAsync("AddDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password}, this.AddDeliveryModeOperationCompleted, userState);
        }
        
        private void OnAddDeliveryModeOperationCompleted(object arg) {
            if ((this.AddDeliveryModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDeliveryModeCompleted(this, new AddDeliveryModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteDeliveryMode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteDeliveryMode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteDeliveryMode(string accreditationNo, string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("DeleteDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password) {
            this.DeleteDeliveryModeAsync(accreditationNo, deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password, object userState) {
            if ((this.DeleteDeliveryModeOperationCompleted == null)) {
                this.DeleteDeliveryModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDeliveryModeOperationCompleted);
            }
            this.InvokeAsync("DeleteDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password}, this.DeleteDeliveryModeOperationCompleted, userState);
        }
        
        private void OnDeleteDeliveryModeOperationCompleted(object arg) {
            if ((this.DeleteDeliveryModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDeliveryModeCompleted(this, new DeleteDeliveryModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:VlidateDeliveryMode2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="VlidateDeliveryMode2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string VlidateDeliveryMode2(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("VlidateDeliveryMode2", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VlidateDeliveryMode2Async(string accreditationNo, string userCode, string password) {
            this.VlidateDeliveryMode2Async(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void VlidateDeliveryMode2Async(string accreditationNo, string userCode, string password, object userState) {
            if ((this.VlidateDeliveryMode2OperationCompleted == null)) {
                this.VlidateDeliveryMode2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnVlidateDeliveryMode2OperationCompleted);
            }
            this.InvokeAsync("VlidateDeliveryMode2", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.VlidateDeliveryMode2OperationCompleted, userState);
        }
        
        private void OnVlidateDeliveryMode2OperationCompleted(object arg) {
            if ((this.VlidateDeliveryMode2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VlidateDeliveryMode2Completed(this, new VlidateDeliveryMode2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddGradingSystem(string accreditationNo, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            object[] results = this.Invoke("AddGradingSystem", new object[] {
                        accreditationNo,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGradingSystemAsync(string accreditationNo, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            this.AddGradingSystemAsync(accreditationNo, gradingCode, minimum, maximum, gpaPoints, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddGradingSystemAsync(string accreditationNo, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password, object userState) {
            if ((this.AddGradingSystemOperationCompleted == null)) {
                this.AddGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGradingSystemOperationCompleted);
            }
            this.InvokeAsync("AddGradingSystem", new object[] {
                        accreditationNo,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password}, this.AddGradingSystemOperationCompleted, userState);
        }
        
        private void OnAddGradingSystemOperationCompleted(object arg) {
            if ((this.AddGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGradingSystemCompleted(this, new AddGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateGradingSystem2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateGradingSystem2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateGradingSystem2(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateGradingSystem2", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateGradingSystem2Async(string accreditationNo, string userCode, string password) {
            this.ValidateGradingSystem2Async(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateGradingSystem2Async(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateGradingSystem2OperationCompleted == null)) {
                this.ValidateGradingSystem2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateGradingSystem2OperationCompleted);
            }
            this.InvokeAsync("ValidateGradingSystem2", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateGradingSystem2OperationCompleted, userState);
        }
        
        private void OnValidateGradingSystem2OperationCompleted(object arg) {
            if ((this.ValidateGradingSystem2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateGradingSystem2Completed(this, new ValidateGradingSystem2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditGradingSystem(string accreditationNo, int code, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            object[] results = this.Invoke("EditGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditGradingSystemAsync(string accreditationNo, int code, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            this.EditGradingSystemAsync(accreditationNo, code, gradingCode, minimum, maximum, gpaPoints, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditGradingSystemAsync(string accreditationNo, int code, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password, object userState) {
            if ((this.EditGradingSystemOperationCompleted == null)) {
                this.EditGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditGradingSystemOperationCompleted);
            }
            this.InvokeAsync("EditGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password}, this.EditGradingSystemOperationCompleted, userState);
        }
        
        private void OnEditGradingSystemOperationCompleted(object arg) {
            if ((this.EditGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditGradingSystemCompleted(this, new EditGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteGradingSystem(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGradingSystemAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteGradingSystemAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteGradingSystemAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteGradingSystemOperationCompleted == null)) {
                this.DeleteGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGradingSystemOperationCompleted);
            }
            this.InvokeAsync("DeleteGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteGradingSystemOperationCompleted, userState);
        }
        
        private void OnDeleteGradingSystemOperationCompleted(object arg) {
            if ((this.DeleteGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGradingSystemCompleted(this, new DeleteGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddUnit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddUnit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddUnit(
                    string accreditationNo, 
                    string unitCode, 
                    string unitTitle, 
                    decimal creditHours, 
                    string yearCode, 
                    string courseCategory, 
                    string coursecontent, 
                    string instructional, 
                    string courseassessment, 
                    string recommendedref, 
                    bool discoverylearning, 
                    bool problembasedlearning, 
                    bool experientiallearning, 
                    bool groupbasedlearning, 
                    bool independentstudies, 
                    bool lectures, 
                    string others, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("AddUnit", new object[] {
                        accreditationNo,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        coursecontent,
                        instructional,
                        courseassessment,
                        recommendedref,
                        discoverylearning,
                        problembasedlearning,
                        experientiallearning,
                        groupbasedlearning,
                        independentstudies,
                        lectures,
                        others,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUnitAsync(
                    string accreditationNo, 
                    string unitCode, 
                    string unitTitle, 
                    decimal creditHours, 
                    string yearCode, 
                    string courseCategory, 
                    string coursecontent, 
                    string instructional, 
                    string courseassessment, 
                    string recommendedref, 
                    bool discoverylearning, 
                    bool problembasedlearning, 
                    bool experientiallearning, 
                    bool groupbasedlearning, 
                    bool independentstudies, 
                    bool lectures, 
                    string others, 
                    string userCode, 
                    string password) {
            this.AddUnitAsync(accreditationNo, unitCode, unitTitle, creditHours, yearCode, courseCategory, coursecontent, instructional, courseassessment, recommendedref, discoverylearning, problembasedlearning, experientiallearning, groupbasedlearning, independentstudies, lectures, others, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddUnitAsync(
                    string accreditationNo, 
                    string unitCode, 
                    string unitTitle, 
                    decimal creditHours, 
                    string yearCode, 
                    string courseCategory, 
                    string coursecontent, 
                    string instructional, 
                    string courseassessment, 
                    string recommendedref, 
                    bool discoverylearning, 
                    bool problembasedlearning, 
                    bool experientiallearning, 
                    bool groupbasedlearning, 
                    bool independentstudies, 
                    bool lectures, 
                    string others, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AddUnitOperationCompleted == null)) {
                this.AddUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUnitOperationCompleted);
            }
            this.InvokeAsync("AddUnit", new object[] {
                        accreditationNo,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        coursecontent,
                        instructional,
                        courseassessment,
                        recommendedref,
                        discoverylearning,
                        problembasedlearning,
                        experientiallearning,
                        groupbasedlearning,
                        independentstudies,
                        lectures,
                        others,
                        userCode,
                        password}, this.AddUnitOperationCompleted, userState);
        }
        
        private void OnAddUnitOperationCompleted(object arg) {
            if ((this.AddUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUnitCompleted(this, new AddUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditUnit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditUnit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditUnit(string accreditationNo, int code, string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string comments, string userCode, string password) {
            object[] results = this.Invoke("EditUnit", new object[] {
                        accreditationNo,
                        code,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        comments,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditUnitAsync(string accreditationNo, int code, string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string comments, string userCode, string password) {
            this.EditUnitAsync(accreditationNo, code, unitCode, unitTitle, creditHours, yearCode, courseCategory, comments, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditUnitAsync(string accreditationNo, int code, string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string comments, string userCode, string password, object userState) {
            if ((this.EditUnitOperationCompleted == null)) {
                this.EditUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditUnitOperationCompleted);
            }
            this.InvokeAsync("EditUnit", new object[] {
                        accreditationNo,
                        code,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        comments,
                        userCode,
                        password}, this.EditUnitOperationCompleted, userState);
        }
        
        private void OnEditUnitOperationCompleted(object arg) {
            if ((this.EditUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditUnitCompleted(this, new EditUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteUnit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteUnit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteUnit(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteUnit", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUnitAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteUnitAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteUnitAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteUnitOperationCompleted == null)) {
                this.DeleteUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUnitOperationCompleted);
            }
            this.InvokeAsync("DeleteUnit", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteUnitOperationCompleted, userState);
        }
        
        private void OnDeleteUnitOperationCompleted(object arg) {
            if ((this.DeleteUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUnitCompleted(this, new DeleteUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddInstructionalMethod", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddInstructionalMethod_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddInstructionalMethod(string accreditationNo, string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("AddInstructionalMethod", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInstructionalMethodAsync(string accreditationNo, string deliveryMode, string userCode, string password) {
            this.AddInstructionalMethodAsync(accreditationNo, deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddInstructionalMethodAsync(string accreditationNo, string deliveryMode, string userCode, string password, object userState) {
            if ((this.AddInstructionalMethodOperationCompleted == null)) {
                this.AddInstructionalMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInstructionalMethodOperationCompleted);
            }
            this.InvokeAsync("AddInstructionalMethod", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password}, this.AddInstructionalMethodOperationCompleted, userState);
        }
        
        private void OnAddInstructionalMethodOperationCompleted(object arg) {
            if ((this.AddInstructionalMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInstructionalMethodCompleted(this, new AddInstructionalMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateInstructionalMethod", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateInstructionalMethod_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateInstructionalMethod(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateInstructionalMethod", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateInstructionalMethodAsync(string accreditationNo, string userCode, string password) {
            this.ValidateInstructionalMethodAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateInstructionalMethodAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateInstructionalMethodOperationCompleted == null)) {
                this.ValidateInstructionalMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateInstructionalMethodOperationCompleted);
            }
            this.InvokeAsync("ValidateInstructionalMethod", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateInstructionalMethodOperationCompleted, userState);
        }
        
        private void OnValidateInstructionalMethodOperationCompleted(object arg) {
            if ((this.ValidateInstructionalMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateInstructionalMethodCompleted(this, new ValidateInstructionalMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddInstructionalMethodEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddInstructionalMethodEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddInstructionalMethodEntry(string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("AddInstructionalMethodEntry", new object[] {
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInstructionalMethodEntryAsync(string deliveryMode, string userCode, string password) {
            this.AddInstructionalMethodEntryAsync(deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddInstructionalMethodEntryAsync(string deliveryMode, string userCode, string password, object userState) {
            if ((this.AddInstructionalMethodEntryOperationCompleted == null)) {
                this.AddInstructionalMethodEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInstructionalMethodEntryOperationCompleted);
            }
            this.InvokeAsync("AddInstructionalMethodEntry", new object[] {
                        deliveryMode,
                        userCode,
                        password}, this.AddInstructionalMethodEntryOperationCompleted, userState);
        }
        
        private void OnAddInstructionalMethodEntryOperationCompleted(object arg) {
            if ((this.AddInstructionalMethodEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInstructionalMethodEntryCompleted(this, new AddInstructionalMethodEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteInstructionalMethod", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteInstructionalMethod_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteInstructionalMethod(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteInstructionalMethod", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInstructionalMethodAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteInstructionalMethodAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteInstructionalMethodAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteInstructionalMethodOperationCompleted == null)) {
                this.DeleteInstructionalMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInstructionalMethodOperationCompleted);
            }
            this.InvokeAsync("DeleteInstructionalMethod", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteInstructionalMethodOperationCompleted, userState);
        }
        
        private void OnDeleteInstructionalMethodOperationCompleted(object arg) {
            if ((this.DeleteInstructionalMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInstructionalMethodCompleted(this, new DeleteInstructionalMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCourseLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCourseLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCourseLearningOutcome(string accreditationNo, string learnigOutcomeCode, string courseCode, string userCode, string password) {
            object[] results = this.Invoke("AddCourseLearningOutcome", new object[] {
                        accreditationNo,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCourseLearningOutcomeAsync(string accreditationNo, string learnigOutcomeCode, string courseCode, string userCode, string password) {
            this.AddCourseLearningOutcomeAsync(accreditationNo, learnigOutcomeCode, courseCode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddCourseLearningOutcomeAsync(string accreditationNo, string learnigOutcomeCode, string courseCode, string userCode, string password, object userState) {
            if ((this.AddCourseLearningOutcomeOperationCompleted == null)) {
                this.AddCourseLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCourseLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("AddCourseLearningOutcome", new object[] {
                        accreditationNo,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password}, this.AddCourseLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnAddCourseLearningOutcomeOperationCompleted(object arg) {
            if ((this.AddCourseLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCourseLearningOutcomeCompleted(this, new AddCourseLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddBook(string accreditationNo, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            object[] results = this.Invoke("AddBook", new object[] {
                        accreditationNo,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBookAsync(string accreditationNo, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            this.AddBookAsync(accreditationNo, bookTitle, courseCode, authors, yearOfPublication, publishers, url, print, electronic, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddBookAsync(string accreditationNo, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password, object userState) {
            if ((this.AddBookOperationCompleted == null)) {
                this.AddBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBookOperationCompleted);
            }
            this.InvokeAsync("AddBook", new object[] {
                        accreditationNo,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password}, this.AddBookOperationCompleted, userState);
        }
        
        private void OnAddBookOperationCompleted(object arg) {
            if ((this.AddBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBookCompleted(this, new AddBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateBook(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateBook", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateBookAsync(string accreditationNo, string userCode, string password) {
            this.ValidateBookAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateBookAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateBookOperationCompleted == null)) {
                this.ValidateBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateBookOperationCompleted);
            }
            this.InvokeAsync("ValidateBook", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateBookOperationCompleted, userState);
        }
        
        private void OnValidateBookOperationCompleted(object arg) {
            if ((this.ValidateBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateBookCompleted(this, new ValidateBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditBook(string accreditationNo, int code, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            object[] results = this.Invoke("EditBook", new object[] {
                        accreditationNo,
                        code,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditBookAsync(string accreditationNo, int code, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            this.EditBookAsync(accreditationNo, code, bookTitle, courseCode, authors, yearOfPublication, publishers, url, print, electronic, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditBookAsync(string accreditationNo, int code, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password, object userState) {
            if ((this.EditBookOperationCompleted == null)) {
                this.EditBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditBookOperationCompleted);
            }
            this.InvokeAsync("EditBook", new object[] {
                        accreditationNo,
                        code,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password}, this.EditBookOperationCompleted, userState);
        }
        
        private void OnEditBookOperationCompleted(object arg) {
            if ((this.EditBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditBookCompleted(this, new EditBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteBook(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteBook", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBookAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteBookAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteBookAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteBookOperationCompleted == null)) {
                this.DeleteBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBookOperationCompleted);
            }
            this.InvokeAsync("DeleteBook", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteBookOperationCompleted, userState);
        }
        
        private void OnDeleteBookOperationCompleted(object arg) {
            if ((this.DeleteBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBookCompleted(this, new DeleteBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SaveDocumentsInstProgrammes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SaveDocumentsInstProgrammes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SaveDocumentsInstProgrammes(
                    string accreditationNo, 
                    bool applicationLetter, 
                    bool paymentDocument, 
                    bool facilitiesdocument, 
                    bool equipmentdocument, 
                    bool coretextdocument, 
                    bool academcistaffdocument, 
                    bool universitypolicydocument, 
                    bool evidencedocument, 
                    string picturePolicy, 
                    string facilitiesImage, 
                    string equipmentsImage, 
                    string coretextImage, 
                    string academicstaffImage, 
                    string supportstaffImage, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("SaveDocumentsInstProgrammes", new object[] {
                        accreditationNo,
                        applicationLetter,
                        paymentDocument,
                        facilitiesdocument,
                        equipmentdocument,
                        coretextdocument,
                        academcistaffdocument,
                        universitypolicydocument,
                        evidencedocument,
                        picturePolicy,
                        facilitiesImage,
                        equipmentsImage,
                        coretextImage,
                        academicstaffImage,
                        supportstaffImage,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDocumentsInstProgrammesAsync(
                    string accreditationNo, 
                    bool applicationLetter, 
                    bool paymentDocument, 
                    bool facilitiesdocument, 
                    bool equipmentdocument, 
                    bool coretextdocument, 
                    bool academcistaffdocument, 
                    bool universitypolicydocument, 
                    bool evidencedocument, 
                    string picturePolicy, 
                    string facilitiesImage, 
                    string equipmentsImage, 
                    string coretextImage, 
                    string academicstaffImage, 
                    string supportstaffImage, 
                    string userCode, 
                    string password) {
            this.SaveDocumentsInstProgrammesAsync(accreditationNo, applicationLetter, paymentDocument, facilitiesdocument, equipmentdocument, coretextdocument, academcistaffdocument, universitypolicydocument, evidencedocument, picturePolicy, facilitiesImage, equipmentsImage, coretextImage, academicstaffImage, supportstaffImage, userCode, password, null);
        }
        
        /// <remarks/>
        public void SaveDocumentsInstProgrammesAsync(
                    string accreditationNo, 
                    bool applicationLetter, 
                    bool paymentDocument, 
                    bool facilitiesdocument, 
                    bool equipmentdocument, 
                    bool coretextdocument, 
                    bool academcistaffdocument, 
                    bool universitypolicydocument, 
                    bool evidencedocument, 
                    string picturePolicy, 
                    string facilitiesImage, 
                    string equipmentsImage, 
                    string coretextImage, 
                    string academicstaffImage, 
                    string supportstaffImage, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.SaveDocumentsInstProgrammesOperationCompleted == null)) {
                this.SaveDocumentsInstProgrammesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDocumentsInstProgrammesOperationCompleted);
            }
            this.InvokeAsync("SaveDocumentsInstProgrammes", new object[] {
                        accreditationNo,
                        applicationLetter,
                        paymentDocument,
                        facilitiesdocument,
                        equipmentdocument,
                        coretextdocument,
                        academcistaffdocument,
                        universitypolicydocument,
                        evidencedocument,
                        picturePolicy,
                        facilitiesImage,
                        equipmentsImage,
                        coretextImage,
                        academicstaffImage,
                        supportstaffImage,
                        userCode,
                        password}, this.SaveDocumentsInstProgrammesOperationCompleted, userState);
        }
        
        private void OnSaveDocumentsInstProgrammesOperationCompleted(object arg) {
            if ((this.SaveDocumentsInstProgrammesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDocumentsInstProgrammesCompleted(this, new SaveDocumentsInstProgrammesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ConfirmPaymentsInstitution", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ConfirmPaymentsInstitution_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ConfirmPaymentsInstitution(string accreditationNo, bool paymentDocument, string paymentRef) {
            object[] results = this.Invoke("ConfirmPaymentsInstitution", new object[] {
                        accreditationNo,
                        paymentDocument,
                        paymentRef});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmPaymentsInstitutionAsync(string accreditationNo, bool paymentDocument, string paymentRef) {
            this.ConfirmPaymentsInstitutionAsync(accreditationNo, paymentDocument, paymentRef, null);
        }
        
        /// <remarks/>
        public void ConfirmPaymentsInstitutionAsync(string accreditationNo, bool paymentDocument, string paymentRef, object userState) {
            if ((this.ConfirmPaymentsInstitutionOperationCompleted == null)) {
                this.ConfirmPaymentsInstitutionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmPaymentsInstitutionOperationCompleted);
            }
            this.InvokeAsync("ConfirmPaymentsInstitution", new object[] {
                        accreditationNo,
                        paymentDocument,
                        paymentRef}, this.ConfirmPaymentsInstitutionOperationCompleted, userState);
        }
        
        private void OnConfirmPaymentsInstitutionOperationCompleted(object arg) {
            if ((this.ConfirmPaymentsInstitutionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmPaymentsInstitutionCompleted(this, new ConfirmPaymentsInstitutionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditCourseLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditCourseLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditCourseLearningOutcome(string accreditationNo, int code, string learnigOutcomeCode, string courseCode, string userCode, string password) {
            object[] results = this.Invoke("EditCourseLearningOutcome", new object[] {
                        accreditationNo,
                        code,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditCourseLearningOutcomeAsync(string accreditationNo, int code, string learnigOutcomeCode, string courseCode, string userCode, string password) {
            this.EditCourseLearningOutcomeAsync(accreditationNo, code, learnigOutcomeCode, courseCode, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditCourseLearningOutcomeAsync(string accreditationNo, int code, string learnigOutcomeCode, string courseCode, string userCode, string password, object userState) {
            if ((this.EditCourseLearningOutcomeOperationCompleted == null)) {
                this.EditCourseLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCourseLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("EditCourseLearningOutcome", new object[] {
                        accreditationNo,
                        code,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password}, this.EditCourseLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnEditCourseLearningOutcomeOperationCompleted(object arg) {
            if ((this.EditCourseLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCourseLearningOutcomeCompleted(this, new EditCourseLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteCourseLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteCourseLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteCourseLearningOutcome(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteCourseLearningOutcome", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCourseLearningOutcomeAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteCourseLearningOutcomeAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteCourseLearningOutcomeAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteCourseLearningOutcomeOperationCompleted == null)) {
                this.DeleteCourseLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCourseLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("DeleteCourseLearningOutcome", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteCourseLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnDeleteCourseLearningOutcomeOperationCompleted(object arg) {
            if ((this.DeleteCourseLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCourseLearningOutcomeCompleted(this, new DeleteCourseLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgramRationale(int rationaleCode, string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgramRationaleAsync(int rationaleCode, string accreditationNo, string userCode, string password) {
            this.DeleteProgramRationaleAsync(rationaleCode, accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgramRationaleAsync(int rationaleCode, string accreditationNo, string userCode, string password, object userState) {
            if ((this.DeleteProgramRationaleOperationCompleted == null)) {
                this.DeleteProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("DeleteProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        userCode,
                        password}, this.DeleteProgramRationaleOperationCompleted, userState);
        }
        
        private void OnDeleteProgramRationaleOperationCompleted(object arg) {
            if ((this.DeleteProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgramRationaleCompleted(this, new DeleteProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:InstitutionCreateinvoice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="InstitutionCreateinvoice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InstitutionCreateinvoice(string universityCode, int usercode) {
            object[] results = this.Invoke("InstitutionCreateinvoice", new object[] {
                        universityCode,
                        usercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InstitutionCreateinvoiceAsync(string universityCode, int usercode) {
            this.InstitutionCreateinvoiceAsync(universityCode, usercode, null);
        }
        
        /// <remarks/>
        public void InstitutionCreateinvoiceAsync(string universityCode, int usercode, object userState) {
            if ((this.InstitutionCreateinvoiceOperationCompleted == null)) {
                this.InstitutionCreateinvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstitutionCreateinvoiceOperationCompleted);
            }
            this.InvokeAsync("InstitutionCreateinvoice", new object[] {
                        universityCode,
                        usercode}, this.InstitutionCreateinvoiceOperationCompleted, userState);
        }
        
        private void OnInstitutionCreateinvoiceOperationCompleted(object arg) {
            if ((this.InstitutionCreateinvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstitutionCreateinvoiceCompleted(this, new InstitutionCreateinvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetOutComenNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetOutComenNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetOutComenNumber(string institutionno) {
            object[] results = this.Invoke("GetOutComenNumber", new object[] {
                        institutionno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutComenNumberAsync(string institutionno) {
            this.GetOutComenNumberAsync(institutionno, null);
        }
        
        /// <remarks/>
        public void GetOutComenNumberAsync(string institutionno, object userState) {
            if ((this.GetOutComenNumberOperationCompleted == null)) {
                this.GetOutComenNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutComenNumberOperationCompleted);
            }
            this.InvokeAsync("GetOutComenNumber", new object[] {
                        institutionno}, this.GetOutComenNumberOperationCompleted, userState);
        }
        
        private void OnGetOutComenNumberOperationCompleted(object arg) {
            if ((this.GetOutComenNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutComenNumberCompleted(this, new GetOutComenNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnUserHelpEmaiRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnUserHelpEmaiRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUserHelpEmaiRequest(string usercode, string password, string email, string useremailsubject, string messagebody) {
            object[] results = this.Invoke("FnUserHelpEmaiRequest", new object[] {
                        usercode,
                        password,
                        email,
                        useremailsubject,
                        messagebody});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUserHelpEmaiRequestAsync(string usercode, string password, string email, string useremailsubject, string messagebody) {
            this.FnUserHelpEmaiRequestAsync(usercode, password, email, useremailsubject, messagebody, null);
        }
        
        /// <remarks/>
        public void FnUserHelpEmaiRequestAsync(string usercode, string password, string email, string useremailsubject, string messagebody, object userState) {
            if ((this.FnUserHelpEmaiRequestOperationCompleted == null)) {
                this.FnUserHelpEmaiRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUserHelpEmaiRequestOperationCompleted);
            }
            this.InvokeAsync("FnUserHelpEmaiRequest", new object[] {
                        usercode,
                        password,
                        email,
                        useremailsubject,
                        messagebody}, this.FnUserHelpEmaiRequestOperationCompleted, userState);
        }
        
        private void OnFnUserHelpEmaiRequestOperationCompleted(object arg) {
            if ((this.FnUserHelpEmaiRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUserHelpEmaiRequestCompleted(this, new FnUserHelpEmaiRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddUniversityChancellors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddUniversityChancellors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddUniversityChancellors(string universityCode, string chancellorName, string qualifications, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofAppointment, string nationality) {
            object[] results = this.Invoke("AddUniversityChancellors", new object[] {
                        universityCode,
                        chancellorName,
                        qualifications,
                        dateofAppointment,
                        nationality});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUniversityChancellorsAsync(string universityCode, string chancellorName, string qualifications, System.DateTime dateofAppointment, string nationality) {
            this.AddUniversityChancellorsAsync(universityCode, chancellorName, qualifications, dateofAppointment, nationality, null);
        }
        
        /// <remarks/>
        public void AddUniversityChancellorsAsync(string universityCode, string chancellorName, string qualifications, System.DateTime dateofAppointment, string nationality, object userState) {
            if ((this.AddUniversityChancellorsOperationCompleted == null)) {
                this.AddUniversityChancellorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUniversityChancellorsOperationCompleted);
            }
            this.InvokeAsync("AddUniversityChancellors", new object[] {
                        universityCode,
                        chancellorName,
                        qualifications,
                        dateofAppointment,
                        nationality}, this.AddUniversityChancellorsOperationCompleted, userState);
        }
        
        private void OnAddUniversityChancellorsOperationCompleted(object arg) {
            if ((this.AddUniversityChancellorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUniversityChancellorsCompleted(this, new AddUniversityChancellorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:InitialGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="InitialGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InitialGeneralDetails(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    int totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    string userCode, 
                    string password) {
            object[] results = this.Invoke("InitialGeneralDetails", new object[] {
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        studentspolicy,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitialGeneralDetailsAsync(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    int totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    string userCode, 
                    string password) {
            this.InitialGeneralDetailsAsync(programName, programDuration, programDomain, programLevel, phylosophy, totalcredit, totalcourse, admission, goal, requlations, examinations, moderation, graduation, description, programanagement, studentspolicy, userCode, password, null);
        }
        
        /// <remarks/>
        public void InitialGeneralDetailsAsync(
                    string programName, 
                    int programDuration, 
                    string programDomain, 
                    int programLevel, 
                    string phylosophy, 
                    string totalcredit, 
                    int totalcourse, 
                    string admission, 
                    string goal, 
                    string requlations, 
                    string examinations, 
                    string moderation, 
                    string graduation, 
                    string description, 
                    string programanagement, 
                    string studentspolicy, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.InitialGeneralDetailsOperationCompleted == null)) {
                this.InitialGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitialGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("InitialGeneralDetails", new object[] {
                        programName,
                        programDuration,
                        programDomain,
                        programLevel,
                        phylosophy,
                        totalcredit,
                        totalcourse,
                        admission,
                        goal,
                        requlations,
                        examinations,
                        moderation,
                        graduation,
                        description,
                        programanagement,
                        studentspolicy,
                        userCode,
                        password}, this.InitialGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnInitialGeneralDetailsOperationCompleted(object arg) {
            if ((this.InitialGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitialGeneralDetailsCompleted(this, new InitialGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgramRationale(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            object[] results = this.Invoke("AddProgramRationale", new object[] {
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgramRationaleAsync(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            this.AddProgramRationaleAsync(accreditationNo, rationaleCategory, rationaleDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgramRationaleAsync(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password, object userState) {
            if ((this.AddProgramRationaleOperationCompleted == null)) {
                this.AddProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("AddProgramRationale", new object[] {
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password}, this.AddProgramRationaleOperationCompleted, userState);
        }
        
        private void OnAddProgramRationaleOperationCompleted(object arg) {
            if ((this.AddProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgramRationaleCompleted(this, new AddProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ValidateProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ValidateProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateProgramRationale(string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("ValidateProgramRationale", new object[] {
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateProgramRationaleAsync(string accreditationNo, string userCode, string password) {
            this.ValidateProgramRationaleAsync(accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void ValidateProgramRationaleAsync(string accreditationNo, string userCode, string password, object userState) {
            if ((this.ValidateProgramRationaleOperationCompleted == null)) {
                this.ValidateProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("ValidateProgramRationale", new object[] {
                        accreditationNo,
                        userCode,
                        password}, this.ValidateProgramRationaleOperationCompleted, userState);
        }
        
        private void OnValidateProgramRationaleOperationCompleted(object arg) {
            if ((this.ValidateProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateProgramRationaleCompleted(this, new ValidateProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGenerateExitReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGenerateExitReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateExitReport(string programmeNumber, string university) {
            object[] results = this.Invoke("FnGenerateExitReport", new object[] {
                        programmeNumber,
                        university});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateExitReportAsync(string programmeNumber, string university) {
            this.FnGenerateExitReportAsync(programmeNumber, university, null);
        }
        
        /// <remarks/>
        public void FnGenerateExitReportAsync(string programmeNumber, string university, object userState) {
            if ((this.FnGenerateExitReportOperationCompleted == null)) {
                this.FnGenerateExitReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateExitReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateExitReport", new object[] {
                        programmeNumber,
                        university}, this.FnGenerateExitReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateExitReportOperationCompleted(object arg) {
            if ((this.FnGenerateExitReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateExitReportCompleted(this, new FnGenerateExitReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGenerateProgrammeFeedbackVouc" +
            "her", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGenerateProgrammeFeedbackVoucher_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateProgrammeFeedbackVoucher(string programmeNumber, string university) {
            object[] results = this.Invoke("FnGenerateProgrammeFeedbackVoucher", new object[] {
                        programmeNumber,
                        university});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateProgrammeFeedbackVoucherAsync(string programmeNumber, string university) {
            this.FnGenerateProgrammeFeedbackVoucherAsync(programmeNumber, university, null);
        }
        
        /// <remarks/>
        public void FnGenerateProgrammeFeedbackVoucherAsync(string programmeNumber, string university, object userState) {
            if ((this.FnGenerateProgrammeFeedbackVoucherOperationCompleted == null)) {
                this.FnGenerateProgrammeFeedbackVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateProgrammeFeedbackVoucherOperationCompleted);
            }
            this.InvokeAsync("FnGenerateProgrammeFeedbackVoucher", new object[] {
                        programmeNumber,
                        university}, this.FnGenerateProgrammeFeedbackVoucherOperationCompleted, userState);
        }
        
        private void OnFnGenerateProgrammeFeedbackVoucherOperationCompleted(object arg) {
            if ((this.FnGenerateProgrammeFeedbackVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateProgrammeFeedbackVoucherCompleted(this, new FnGenerateProgrammeFeedbackVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnGenerateProgrammeEvaluationTo" +
            "ool", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnGenerateProgrammeEvaluationToool_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateProgrammeEvaluationToool(string programmeNumber, string university) {
            object[] results = this.Invoke("FnGenerateProgrammeEvaluationToool", new object[] {
                        programmeNumber,
                        university});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateProgrammeEvaluationTooolAsync(string programmeNumber, string university) {
            this.FnGenerateProgrammeEvaluationTooolAsync(programmeNumber, university, null);
        }
        
        /// <remarks/>
        public void FnGenerateProgrammeEvaluationTooolAsync(string programmeNumber, string university, object userState) {
            if ((this.FnGenerateProgrammeEvaluationTooolOperationCompleted == null)) {
                this.FnGenerateProgrammeEvaluationTooolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateProgrammeEvaluationTooolOperationCompleted);
            }
            this.InvokeAsync("FnGenerateProgrammeEvaluationToool", new object[] {
                        programmeNumber,
                        university}, this.FnGenerateProgrammeEvaluationTooolOperationCompleted, userState);
        }
        
        private void OnFnGenerateProgrammeEvaluationTooolOperationCompleted(object arg) {
            if ((this.FnGenerateProgrammeEvaluationTooolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateProgrammeEvaluationTooolCompleted(this, new FnGenerateProgrammeEvaluationTooolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:PortalResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="PortalResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PortalResetPassword(string emailaddress) {
            object[] results = this.Invoke("PortalResetPassword", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PortalResetPasswordAsync(string emailaddress) {
            this.PortalResetPasswordAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void PortalResetPasswordAsync(string emailaddress, object userState) {
            if ((this.PortalResetPasswordOperationCompleted == null)) {
                this.PortalResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPortalResetPasswordOperationCompleted);
            }
            this.InvokeAsync("PortalResetPassword", new object[] {
                        emailaddress}, this.PortalResetPasswordOperationCompleted, userState);
        }
        
        private void OnPortalResetPasswordOperationCompleted(object arg) {
            if ((this.PortalResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PortalResetPasswordCompleted(this, new PortalResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetRationaleDescription", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetRationaleDescription_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetRationaleDescription(string accreditation, string universitycode, int category) {
            object[] results = this.Invoke("FngetRationaleDescription", new object[] {
                        accreditation,
                        universitycode,
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetRationaleDescriptionAsync(string accreditation, string universitycode, int category) {
            this.FngetRationaleDescriptionAsync(accreditation, universitycode, category, null);
        }
        
        /// <remarks/>
        public void FngetRationaleDescriptionAsync(string accreditation, string universitycode, int category, object userState) {
            if ((this.FngetRationaleDescriptionOperationCompleted == null)) {
                this.FngetRationaleDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetRationaleDescriptionOperationCompleted);
            }
            this.InvokeAsync("FngetRationaleDescription", new object[] {
                        accreditation,
                        universitycode,
                        category}, this.FngetRationaleDescriptionOperationCompleted, userState);
        }
        
        private void OnFngetRationaleDescriptionOperationCompleted(object arg) {
            if ((this.FngetRationaleDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetRationaleDescriptionCompleted(this, new FngetRationaleDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FngetUniversityDomain", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FngetUniversityDomain_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetUniversityDomain(string universityCode) {
            object[] results = this.Invoke("FngetUniversityDomain", new object[] {
                        universityCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetUniversityDomainAsync(string universityCode) {
            this.FngetUniversityDomainAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void FngetUniversityDomainAsync(string universityCode, object userState) {
            if ((this.FngetUniversityDomainOperationCompleted == null)) {
                this.FngetUniversityDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetUniversityDomainOperationCompleted);
            }
            this.InvokeAsync("FngetUniversityDomain", new object[] {
                        universityCode}, this.FngetUniversityDomainOperationCompleted, userState);
        }
        
        private void OnFngetUniversityDomainOperationCompleted(object arg) {
            if ((this.FngetUniversityDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetUniversityDomainCompleted(this, new FngetUniversityDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Fnuseraccountcreation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Fnuseraccountcreation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Fnuseraccountcreation(string idnumber, string firstname, string middlename, string lastname, string phonenumber, string emailaddress, string address, string postcodes, string city, string country, string universityname, string applicationType, string institutionType, string county, string address2) {
            object[] results = this.Invoke("Fnuseraccountcreation", new object[] {
                        idnumber,
                        firstname,
                        middlename,
                        lastname,
                        phonenumber,
                        emailaddress,
                        address,
                        postcodes,
                        city,
                        country,
                        universityname,
                        applicationType,
                        institutionType,
                        county,
                        address2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnuseraccountcreationAsync(string idnumber, string firstname, string middlename, string lastname, string phonenumber, string emailaddress, string address, string postcodes, string city, string country, string universityname, string applicationType, string institutionType, string county, string address2) {
            this.FnuseraccountcreationAsync(idnumber, firstname, middlename, lastname, phonenumber, emailaddress, address, postcodes, city, country, universityname, applicationType, institutionType, county, address2, null);
        }
        
        /// <remarks/>
        public void FnuseraccountcreationAsync(
                    string idnumber, 
                    string firstname, 
                    string middlename, 
                    string lastname, 
                    string phonenumber, 
                    string emailaddress, 
                    string address, 
                    string postcodes, 
                    string city, 
                    string country, 
                    string universityname, 
                    string applicationType, 
                    string institutionType, 
                    string county, 
                    string address2, 
                    object userState) {
            if ((this.FnuseraccountcreationOperationCompleted == null)) {
                this.FnuseraccountcreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnuseraccountcreationOperationCompleted);
            }
            this.InvokeAsync("Fnuseraccountcreation", new object[] {
                        idnumber,
                        firstname,
                        middlename,
                        lastname,
                        phonenumber,
                        emailaddress,
                        address,
                        postcodes,
                        city,
                        country,
                        universityname,
                        applicationType,
                        institutionType,
                        county,
                        address2}, this.FnuseraccountcreationOperationCompleted, userState);
        }
        
        private void OnFnuseraccountcreationOperationCompleted(object arg) {
            if ((this.FnuseraccountcreationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnuseraccountcreationCompleted(this, new FnuseraccountcreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnceateapplicationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnceateapplicationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnceateapplicationLines(string qncode, string applicatinNumber, string accreditationAnswer, string responce) {
            object[] results = this.Invoke("FnceateapplicationLines", new object[] {
                        qncode,
                        applicatinNumber,
                        accreditationAnswer,
                        responce});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnceateapplicationLinesAsync(string qncode, string applicatinNumber, string accreditationAnswer, string responce) {
            this.FnceateapplicationLinesAsync(qncode, applicatinNumber, accreditationAnswer, responce, null);
        }
        
        /// <remarks/>
        public void FnceateapplicationLinesAsync(string qncode, string applicatinNumber, string accreditationAnswer, string responce, object userState) {
            if ((this.FnceateapplicationLinesOperationCompleted == null)) {
                this.FnceateapplicationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnceateapplicationLinesOperationCompleted);
            }
            this.InvokeAsync("FnceateapplicationLines", new object[] {
                        qncode,
                        applicatinNumber,
                        accreditationAnswer,
                        responce}, this.FnceateapplicationLinesOperationCompleted, userState);
        }
        
        private void OnFnceateapplicationLinesOperationCompleted(object arg) {
            if ((this.FnceateapplicationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnceateapplicationLinesCompleted(this, new FnceateapplicationLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AccreditationApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AccreditationApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AccreditationApplication(string accreditationtype, string name, string institutiontype, string email, string phone, string applicationNo) {
            object[] results = this.Invoke("AccreditationApplication", new object[] {
                        accreditationtype,
                        name,
                        institutiontype,
                        email,
                        phone,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccreditationApplicationAsync(string accreditationtype, string name, string institutiontype, string email, string phone, string applicationNo) {
            this.AccreditationApplicationAsync(accreditationtype, name, institutiontype, email, phone, applicationNo, null);
        }
        
        /// <remarks/>
        public void AccreditationApplicationAsync(string accreditationtype, string name, string institutiontype, string email, string phone, string applicationNo, object userState) {
            if ((this.AccreditationApplicationOperationCompleted == null)) {
                this.AccreditationApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccreditationApplicationOperationCompleted);
            }
            this.InvokeAsync("AccreditationApplication", new object[] {
                        accreditationtype,
                        name,
                        institutiontype,
                        email,
                        phone,
                        applicationNo}, this.AccreditationApplicationOperationCompleted, userState);
        }
        
        private void OnAccreditationApplicationOperationCompleted(object arg) {
            if ((this.AccreditationApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccreditationApplicationCompleted(this, new AccreditationApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CreateCampus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CreateCampus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateCampus(string name, string city, string postcode, string address, string contact, int category, string applicationNo, string country, string phone, string county, string email) {
            object[] results = this.Invoke("CreateCampus", new object[] {
                        name,
                        city,
                        postcode,
                        address,
                        contact,
                        category,
                        applicationNo,
                        country,
                        phone,
                        county,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCampusAsync(string name, string city, string postcode, string address, string contact, int category, string applicationNo, string country, string phone, string county, string email) {
            this.CreateCampusAsync(name, city, postcode, address, contact, category, applicationNo, country, phone, county, email, null);
        }
        
        /// <remarks/>
        public void CreateCampusAsync(string name, string city, string postcode, string address, string contact, int category, string applicationNo, string country, string phone, string county, string email, object userState) {
            if ((this.CreateCampusOperationCompleted == null)) {
                this.CreateCampusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCampusOperationCompleted);
            }
            this.InvokeAsync("CreateCampus", new object[] {
                        name,
                        city,
                        postcode,
                        address,
                        contact,
                        category,
                        applicationNo,
                        country,
                        phone,
                        county,
                        email}, this.CreateCampusOperationCompleted, userState);
        }
        
        private void OnCreateCampusOperationCompleted(object arg) {
            if ((this.CreateCampusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCampusCompleted(this, new CreateCampusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CreateOptionResponce", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CreateOptionResponce_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateOptionResponce(string optioncode, string applicationNo) {
            object[] results = this.Invoke("CreateOptionResponce", new object[] {
                        optioncode,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOptionResponceAsync(string optioncode, string applicationNo) {
            this.CreateOptionResponceAsync(optioncode, applicationNo, null);
        }
        
        /// <remarks/>
        public void CreateOptionResponceAsync(string optioncode, string applicationNo, object userState) {
            if ((this.CreateOptionResponceOperationCompleted == null)) {
                this.CreateOptionResponceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOptionResponceOperationCompleted);
            }
            this.InvokeAsync("CreateOptionResponce", new object[] {
                        optioncode,
                        applicationNo}, this.CreateOptionResponceOperationCompleted, userState);
        }
        
        private void OnCreateOptionResponceOperationCompleted(object arg) {
            if ((this.CreateOptionResponceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOptionResponceCompleted(this, new CreateOptionResponceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CreatAccreditationResponce", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CreatAccreditationResponce_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatAccreditationResponce(string qnCode, string optionResponce, string applicatinNumber) {
            object[] results = this.Invoke("CreatAccreditationResponce", new object[] {
                        qnCode,
                        optionResponce,
                        applicatinNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatAccreditationResponceAsync(string qnCode, string optionResponce, string applicatinNumber) {
            this.CreatAccreditationResponceAsync(qnCode, optionResponce, applicatinNumber, null);
        }
        
        /// <remarks/>
        public void CreatAccreditationResponceAsync(string qnCode, string optionResponce, string applicatinNumber, object userState) {
            if ((this.CreatAccreditationResponceOperationCompleted == null)) {
                this.CreatAccreditationResponceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatAccreditationResponceOperationCompleted);
            }
            this.InvokeAsync("CreatAccreditationResponce", new object[] {
                        qnCode,
                        optionResponce,
                        applicatinNumber}, this.CreatAccreditationResponceOperationCompleted, userState);
        }
        
        private void OnCreatAccreditationResponceOperationCompleted(object arg) {
            if ((this.CreatAccreditationResponceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatAccreditationResponceCompleted(this, new CreatAccreditationResponceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CreateStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CreateStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStaff(string description, int noofstaff, string highestq, string lowestq, int category, string applicationNo) {
            object[] results = this.Invoke("CreateStaff", new object[] {
                        description,
                        noofstaff,
                        highestq,
                        lowestq,
                        category,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStaffAsync(string description, int noofstaff, string highestq, string lowestq, int category, string applicationNo) {
            this.CreateStaffAsync(description, noofstaff, highestq, lowestq, category, applicationNo, null);
        }
        
        /// <remarks/>
        public void CreateStaffAsync(string description, int noofstaff, string highestq, string lowestq, int category, string applicationNo, object userState) {
            if ((this.CreateStaffOperationCompleted == null)) {
                this.CreateStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStaffOperationCompleted);
            }
            this.InvokeAsync("CreateStaff", new object[] {
                        description,
                        noofstaff,
                        highestq,
                        lowestq,
                        category,
                        applicationNo}, this.CreateStaffOperationCompleted, userState);
        }
        
        private void OnCreateStaffOperationCompleted(object arg) {
            if ((this.CreateStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStaffCompleted(this, new CreateStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CreateTrainers", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CreateTrainers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTrainers(string courseCode, string courseSection, int parttimestudents, int fulltimestudents, int parttimetrainers, int fulltimetrainers, string highestQ, string lowestQ, int minLecHrs, int maxLecHrs, int micCoursehrs, int maxcoursehrs, string application) {
            object[] results = this.Invoke("CreateTrainers", new object[] {
                        courseCode,
                        courseSection,
                        parttimestudents,
                        fulltimestudents,
                        parttimetrainers,
                        fulltimetrainers,
                        highestQ,
                        lowestQ,
                        minLecHrs,
                        maxLecHrs,
                        micCoursehrs,
                        maxcoursehrs,
                        application});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTrainersAsync(string courseCode, string courseSection, int parttimestudents, int fulltimestudents, int parttimetrainers, int fulltimetrainers, string highestQ, string lowestQ, int minLecHrs, int maxLecHrs, int micCoursehrs, int maxcoursehrs, string application) {
            this.CreateTrainersAsync(courseCode, courseSection, parttimestudents, fulltimestudents, parttimetrainers, fulltimetrainers, highestQ, lowestQ, minLecHrs, maxLecHrs, micCoursehrs, maxcoursehrs, application, null);
        }
        
        /// <remarks/>
        public void CreateTrainersAsync(string courseCode, string courseSection, int parttimestudents, int fulltimestudents, int parttimetrainers, int fulltimetrainers, string highestQ, string lowestQ, int minLecHrs, int maxLecHrs, int micCoursehrs, int maxcoursehrs, string application, object userState) {
            if ((this.CreateTrainersOperationCompleted == null)) {
                this.CreateTrainersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrainersOperationCompleted);
            }
            this.InvokeAsync("CreateTrainers", new object[] {
                        courseCode,
                        courseSection,
                        parttimestudents,
                        fulltimestudents,
                        parttimetrainers,
                        fulltimetrainers,
                        highestQ,
                        lowestQ,
                        minLecHrs,
                        maxLecHrs,
                        micCoursehrs,
                        maxcoursehrs,
                        application}, this.CreateTrainersOperationCompleted, userState);
        }
        
        private void OnCreateTrainersOperationCompleted(object arg) {
            if ((this.CreateTrainersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrainersCompleted(this, new CreateTrainersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SittingCapacity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SittingCapacity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SittingCapacity(string applicationNo, string examination, int noOfClasses, decimal sittingSpace, int largestClassSitting, int smallestClassSitting, int totalSittingCapacity) {
            object[] results = this.Invoke("SittingCapacity", new object[] {
                        applicationNo,
                        examination,
                        noOfClasses,
                        sittingSpace,
                        largestClassSitting,
                        smallestClassSitting,
                        totalSittingCapacity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SittingCapacityAsync(string applicationNo, string examination, int noOfClasses, decimal sittingSpace, int largestClassSitting, int smallestClassSitting, int totalSittingCapacity) {
            this.SittingCapacityAsync(applicationNo, examination, noOfClasses, sittingSpace, largestClassSitting, smallestClassSitting, totalSittingCapacity, null);
        }
        
        /// <remarks/>
        public void SittingCapacityAsync(string applicationNo, string examination, int noOfClasses, decimal sittingSpace, int largestClassSitting, int smallestClassSitting, int totalSittingCapacity, object userState) {
            if ((this.SittingCapacityOperationCompleted == null)) {
                this.SittingCapacityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSittingCapacityOperationCompleted);
            }
            this.InvokeAsync("SittingCapacity", new object[] {
                        applicationNo,
                        examination,
                        noOfClasses,
                        sittingSpace,
                        largestClassSitting,
                        smallestClassSitting,
                        totalSittingCapacity}, this.SittingCapacityOperationCompleted, userState);
        }
        
        private void OnSittingCapacityOperationCompleted(object arg) {
            if ((this.SittingCapacityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SittingCapacityCompleted(this, new SittingCapacityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CreateRecomBooks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CreateRecomBooks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRecomBooks(string applicationNo, string domainARea, int estimatedNo, decimal estimatedTotalValue, int noOfRecommBooks) {
            object[] results = this.Invoke("CreateRecomBooks", new object[] {
                        applicationNo,
                        domainARea,
                        estimatedNo,
                        estimatedTotalValue,
                        noOfRecommBooks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRecomBooksAsync(string applicationNo, string domainARea, int estimatedNo, decimal estimatedTotalValue, int noOfRecommBooks) {
            this.CreateRecomBooksAsync(applicationNo, domainARea, estimatedNo, estimatedTotalValue, noOfRecommBooks, null);
        }
        
        /// <remarks/>
        public void CreateRecomBooksAsync(string applicationNo, string domainARea, int estimatedNo, decimal estimatedTotalValue, int noOfRecommBooks, object userState) {
            if ((this.CreateRecomBooksOperationCompleted == null)) {
                this.CreateRecomBooksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRecomBooksOperationCompleted);
            }
            this.InvokeAsync("CreateRecomBooks", new object[] {
                        applicationNo,
                        domainARea,
                        estimatedNo,
                        estimatedTotalValue,
                        noOfRecommBooks}, this.CreateRecomBooksOperationCompleted, userState);
        }
        
        private void OnCreateRecomBooksOperationCompleted(object arg) {
            if ((this.CreateRecomBooksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRecomBooksCompleted(this, new CreateRecomBooksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CreateComputerLab", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CreateComputerLab_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateComputerLab(string applicationNo, string compsLab, decimal sittingCapacity, int aVailableForTraining, int adapter, decimal totalSpace) {
            object[] results = this.Invoke("CreateComputerLab", new object[] {
                        applicationNo,
                        compsLab,
                        sittingCapacity,
                        aVailableForTraining,
                        adapter,
                        totalSpace});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateComputerLabAsync(string applicationNo, string compsLab, decimal sittingCapacity, int aVailableForTraining, int adapter, decimal totalSpace) {
            this.CreateComputerLabAsync(applicationNo, compsLab, sittingCapacity, aVailableForTraining, adapter, totalSpace, null);
        }
        
        /// <remarks/>
        public void CreateComputerLabAsync(string applicationNo, string compsLab, decimal sittingCapacity, int aVailableForTraining, int adapter, decimal totalSpace, object userState) {
            if ((this.CreateComputerLabOperationCompleted == null)) {
                this.CreateComputerLabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateComputerLabOperationCompleted);
            }
            this.InvokeAsync("CreateComputerLab", new object[] {
                        applicationNo,
                        compsLab,
                        sittingCapacity,
                        aVailableForTraining,
                        adapter,
                        totalSpace}, this.CreateComputerLabOperationCompleted, userState);
        }
        
        private void OnCreateComputerLabOperationCompleted(object arg) {
            if ((this.CreateComputerLabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateComputerLabCompleted(this, new CreateComputerLabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CreateCompDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CreateCompDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateCompDetails(string applicationNo, int noOfComps, string processorType, string processorSpeer, string ramCapacity, string hardDisk) {
            object[] results = this.Invoke("CreateCompDetails", new object[] {
                        applicationNo,
                        noOfComps,
                        processorType,
                        processorSpeer,
                        ramCapacity,
                        hardDisk});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCompDetailsAsync(string applicationNo, int noOfComps, string processorType, string processorSpeer, string ramCapacity, string hardDisk) {
            this.CreateCompDetailsAsync(applicationNo, noOfComps, processorType, processorSpeer, ramCapacity, hardDisk, null);
        }
        
        /// <remarks/>
        public void CreateCompDetailsAsync(string applicationNo, int noOfComps, string processorType, string processorSpeer, string ramCapacity, string hardDisk, object userState) {
            if ((this.CreateCompDetailsOperationCompleted == null)) {
                this.CreateCompDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCompDetailsOperationCompleted);
            }
            this.InvokeAsync("CreateCompDetails", new object[] {
                        applicationNo,
                        noOfComps,
                        processorType,
                        processorSpeer,
                        ramCapacity,
                        hardDisk}, this.CreateCompDetailsOperationCompleted, userState);
        }
        
        private void OnCreateCompDetailsOperationCompleted(object arg) {
            if ((this.CreateCompDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCompDetailsCompleted(this, new CreateCompDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CreateICTAccessory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CreateICTAccessory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateICTAccessory(string applicationNo, string academicTypeName, string typeAvailable, int category, int number) {
            object[] results = this.Invoke("CreateICTAccessory", new object[] {
                        applicationNo,
                        academicTypeName,
                        typeAvailable,
                        category,
                        number});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateICTAccessoryAsync(string applicationNo, string academicTypeName, string typeAvailable, int category, int number) {
            this.CreateICTAccessoryAsync(applicationNo, academicTypeName, typeAvailable, category, number, null);
        }
        
        /// <remarks/>
        public void CreateICTAccessoryAsync(string applicationNo, string academicTypeName, string typeAvailable, int category, int number, object userState) {
            if ((this.CreateICTAccessoryOperationCompleted == null)) {
                this.CreateICTAccessoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateICTAccessoryOperationCompleted);
            }
            this.InvokeAsync("CreateICTAccessory", new object[] {
                        applicationNo,
                        academicTypeName,
                        typeAvailable,
                        category,
                        number}, this.CreateICTAccessoryOperationCompleted, userState);
        }
        
        private void OnCreateICTAccessoryOperationCompleted(object arg) {
            if ((this.CreateICTAccessoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateICTAccessoryCompleted(this, new CreateICTAccessoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteCampusLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteCampusLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteCampusLine(string applicationNo, int lineNo) {
            object[] results = this.Invoke("DeleteCampusLine", new object[] {
                        applicationNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCampusLineAsync(string applicationNo, int lineNo) {
            this.DeleteCampusLineAsync(applicationNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteCampusLineAsync(string applicationNo, int lineNo, object userState) {
            if ((this.DeleteCampusLineOperationCompleted == null)) {
                this.DeleteCampusLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCampusLineOperationCompleted);
            }
            this.InvokeAsync("DeleteCampusLine", new object[] {
                        applicationNo,
                        lineNo}, this.DeleteCampusLineOperationCompleted, userState);
        }
        
        private void OnDeleteCampusLineOperationCompleted(object arg) {
            if ((this.DeleteCampusLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCampusLineCompleted(this, new DeleteCampusLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeletestaffLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeletestaffLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeletestaffLine(string applicationNo, int lineNo) {
            object[] results = this.Invoke("DeletestaffLine", new object[] {
                        applicationNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletestaffLineAsync(string applicationNo, int lineNo) {
            this.DeletestaffLineAsync(applicationNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeletestaffLineAsync(string applicationNo, int lineNo, object userState) {
            if ((this.DeletestaffLineOperationCompleted == null)) {
                this.DeletestaffLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletestaffLineOperationCompleted);
            }
            this.InvokeAsync("DeletestaffLine", new object[] {
                        applicationNo,
                        lineNo}, this.DeletestaffLineOperationCompleted, userState);
        }
        
        private void OnDeletestaffLineOperationCompleted(object arg) {
            if ((this.DeletestaffLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletestaffLineCompleted(this, new DeletestaffLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeletetrainerLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeletetrainerLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeletetrainerLine(string applicationNo, int lineNo) {
            object[] results = this.Invoke("DeletetrainerLine", new object[] {
                        applicationNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletetrainerLineAsync(string applicationNo, int lineNo) {
            this.DeletetrainerLineAsync(applicationNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeletetrainerLineAsync(string applicationNo, int lineNo, object userState) {
            if ((this.DeletetrainerLineOperationCompleted == null)) {
                this.DeletetrainerLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletetrainerLineOperationCompleted);
            }
            this.InvokeAsync("DeletetrainerLine", new object[] {
                        applicationNo,
                        lineNo}, this.DeletetrainerLineOperationCompleted, userState);
        }
        
        private void OnDeletetrainerLineOperationCompleted(object arg) {
            if ((this.DeletetrainerLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletetrainerLineCompleted(this, new DeletetrainerLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteclassLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteclassLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteclassLine(string applicationNo, int lineNo) {
            object[] results = this.Invoke("DeleteclassLine", new object[] {
                        applicationNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteclassLineAsync(string applicationNo, int lineNo) {
            this.DeleteclassLineAsync(applicationNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteclassLineAsync(string applicationNo, int lineNo, object userState) {
            if ((this.DeleteclassLineOperationCompleted == null)) {
                this.DeleteclassLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteclassLineOperationCompleted);
            }
            this.InvokeAsync("DeleteclassLine", new object[] {
                        applicationNo,
                        lineNo}, this.DeleteclassLineOperationCompleted, userState);
        }
        
        private void OnDeleteclassLineOperationCompleted(object arg) {
            if ((this.DeleteclassLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteclassLineCompleted(this, new DeleteclassLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteRefBookLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteRefBookLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRefBookLine(string applicationNo, int lineNo) {
            object[] results = this.Invoke("DeleteRefBookLine", new object[] {
                        applicationNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRefBookLineAsync(string applicationNo, int lineNo) {
            this.DeleteRefBookLineAsync(applicationNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteRefBookLineAsync(string applicationNo, int lineNo, object userState) {
            if ((this.DeleteRefBookLineOperationCompleted == null)) {
                this.DeleteRefBookLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRefBookLineOperationCompleted);
            }
            this.InvokeAsync("DeleteRefBookLine", new object[] {
                        applicationNo,
                        lineNo}, this.DeleteRefBookLineOperationCompleted, userState);
        }
        
        private void OnDeleteRefBookLineOperationCompleted(object arg) {
            if ((this.DeleteRefBookLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRefBookLineCompleted(this, new DeleteRefBookLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteCompLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteCompLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteCompLine(string applicationNo, int lineNo) {
            object[] results = this.Invoke("DeleteCompLine", new object[] {
                        applicationNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCompLineAsync(string applicationNo, int lineNo) {
            this.DeleteCompLineAsync(applicationNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteCompLineAsync(string applicationNo, int lineNo, object userState) {
            if ((this.DeleteCompLineOperationCompleted == null)) {
                this.DeleteCompLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCompLineOperationCompleted);
            }
            this.InvokeAsync("DeleteCompLine", new object[] {
                        applicationNo,
                        lineNo}, this.DeleteCompLineOperationCompleted, userState);
        }
        
        private void OnDeleteCompLineOperationCompleted(object arg) {
            if ((this.DeleteCompLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompLineCompleted(this, new DeleteCompLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteCompDetailsLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteCompDetailsLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteCompDetailsLine(string applicationNo, int lineNo) {
            object[] results = this.Invoke("DeleteCompDetailsLine", new object[] {
                        applicationNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCompDetailsLineAsync(string applicationNo, int lineNo) {
            this.DeleteCompDetailsLineAsync(applicationNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteCompDetailsLineAsync(string applicationNo, int lineNo, object userState) {
            if ((this.DeleteCompDetailsLineOperationCompleted == null)) {
                this.DeleteCompDetailsLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCompDetailsLineOperationCompleted);
            }
            this.InvokeAsync("DeleteCompDetailsLine", new object[] {
                        applicationNo,
                        lineNo}, this.DeleteCompDetailsLineOperationCompleted, userState);
        }
        
        private void OnDeleteCompDetailsLineOperationCompleted(object arg) {
            if ((this.DeleteCompDetailsLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompDetailsLineCompleted(this, new DeleteCompDetailsLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SelfEvaluationResponce", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SelfEvaluationResponce_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SelfEvaluationResponce(string applicationNo, string componentCode, string questionCode, decimal score, string comment, string evaluationHeaderNo) {
            object[] results = this.Invoke("SelfEvaluationResponce", new object[] {
                        applicationNo,
                        componentCode,
                        questionCode,
                        score,
                        comment,
                        evaluationHeaderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelfEvaluationResponceAsync(string applicationNo, string componentCode, string questionCode, decimal score, string comment, string evaluationHeaderNo) {
            this.SelfEvaluationResponceAsync(applicationNo, componentCode, questionCode, score, comment, evaluationHeaderNo, null);
        }
        
        /// <remarks/>
        public void SelfEvaluationResponceAsync(string applicationNo, string componentCode, string questionCode, decimal score, string comment, string evaluationHeaderNo, object userState) {
            if ((this.SelfEvaluationResponceOperationCompleted == null)) {
                this.SelfEvaluationResponceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelfEvaluationResponceOperationCompleted);
            }
            this.InvokeAsync("SelfEvaluationResponce", new object[] {
                        applicationNo,
                        componentCode,
                        questionCode,
                        score,
                        comment,
                        evaluationHeaderNo}, this.SelfEvaluationResponceOperationCompleted, userState);
        }
        
        private void OnSelfEvaluationResponceOperationCompleted(object arg) {
            if ((this.SelfEvaluationResponceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelfEvaluationResponceCompleted(this, new SelfEvaluationResponceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:PrintCertificate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="PrintCertificate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintCertificate(string applicationNoFilter) {
            object[] results = this.Invoke("PrintCertificate", new object[] {
                        applicationNoFilter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintCertificateAsync(string applicationNoFilter) {
            this.PrintCertificateAsync(applicationNoFilter, null);
        }
        
        /// <remarks/>
        public void PrintCertificateAsync(string applicationNoFilter, object userState) {
            if ((this.PrintCertificateOperationCompleted == null)) {
                this.PrintCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintCertificateOperationCompleted);
            }
            this.InvokeAsync("PrintCertificate", new object[] {
                        applicationNoFilter}, this.PrintCertificateOperationCompleted, userState);
        }
        
        private void OnPrintCertificateOperationCompleted(object arg) {
            if ((this.PrintCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintCertificateCompleted(this, new PrintCertificateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SubmitApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SubmitApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitApplication(string applicationNo) {
            object[] results = this.Invoke("SubmitApplication", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitApplicationAsync(string applicationNo) {
            this.SubmitApplicationAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void SubmitApplicationAsync(string applicationNo, object userState) {
            if ((this.SubmitApplicationOperationCompleted == null)) {
                this.SubmitApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitApplicationOperationCompleted);
            }
            this.InvokeAsync("SubmitApplication", new object[] {
                        applicationNo}, this.SubmitApplicationOperationCompleted, userState);
        }
        
        private void OnSubmitApplicationOperationCompleted(object arg) {
            if ((this.SubmitApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitApplicationCompleted(this, new SubmitApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendEmail(string recipient, string title, string message) {
            object[] results = this.Invoke("SendEmail", new object[] {
                        recipient,
                        title,
                        message});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailAsync(string recipient, string title, string message) {
            this.SendEmailAsync(recipient, title, message, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string recipient, string title, string message, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        recipient,
                        title,
                        message}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new SendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CreatAccreditationSubQResponce", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CreatAccreditationSubQResponce_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatAccreditationSubQResponce(string qnCode, string optionResponce, string applicatinNumber, string subQnCode) {
            object[] results = this.Invoke("CreatAccreditationSubQResponce", new object[] {
                        qnCode,
                        optionResponce,
                        applicatinNumber,
                        subQnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatAccreditationSubQResponceAsync(string qnCode, string optionResponce, string applicatinNumber, string subQnCode) {
            this.CreatAccreditationSubQResponceAsync(qnCode, optionResponce, applicatinNumber, subQnCode, null);
        }
        
        /// <remarks/>
        public void CreatAccreditationSubQResponceAsync(string qnCode, string optionResponce, string applicatinNumber, string subQnCode, object userState) {
            if ((this.CreatAccreditationSubQResponceOperationCompleted == null)) {
                this.CreatAccreditationSubQResponceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatAccreditationSubQResponceOperationCompleted);
            }
            this.InvokeAsync("CreatAccreditationSubQResponce", new object[] {
                        qnCode,
                        optionResponce,
                        applicatinNumber,
                        subQnCode}, this.CreatAccreditationSubQResponceOperationCompleted, userState);
        }
        
        private void OnCreatAccreditationSubQResponceOperationCompleted(object arg) {
            if ((this.CreatAccreditationSubQResponceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatAccreditationSubQResponceCompleted(this, new CreatAccreditationSubQResponceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteICTLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteICTLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteICTLine(string applicationNo, int lineNo) {
            object[] results = this.Invoke("DeleteICTLine", new object[] {
                        applicationNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteICTLineAsync(string applicationNo, int lineNo) {
            this.DeleteICTLineAsync(applicationNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteICTLineAsync(string applicationNo, int lineNo, object userState) {
            if ((this.DeleteICTLineOperationCompleted == null)) {
                this.DeleteICTLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteICTLineOperationCompleted);
            }
            this.InvokeAsync("DeleteICTLine", new object[] {
                        applicationNo,
                        lineNo}, this.DeleteICTLineOperationCompleted, userState);
        }
        
        private void OnDeleteICTLineOperationCompleted(object arg) {
            if ((this.DeleteICTLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteICTLineCompleted(this, new DeleteICTLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SelfEvalutionApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SelfEvalutionApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SelfEvalutionApplication(string applicationNo) {
            object[] results = this.Invoke("SelfEvalutionApplication", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelfEvalutionApplicationAsync(string applicationNo) {
            this.SelfEvalutionApplicationAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void SelfEvalutionApplicationAsync(string applicationNo, object userState) {
            if ((this.SelfEvalutionApplicationOperationCompleted == null)) {
                this.SelfEvalutionApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelfEvalutionApplicationOperationCompleted);
            }
            this.InvokeAsync("SelfEvalutionApplication", new object[] {
                        applicationNo}, this.SelfEvalutionApplicationOperationCompleted, userState);
        }
        
        private void OnSelfEvalutionApplicationOperationCompleted(object arg) {
            if ((this.SelfEvalutionApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelfEvalutionApplicationCompleted(this, new SelfEvalutionApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:PrintScore", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="PrintScore_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintScore(string applicationNoFilter) {
            object[] results = this.Invoke("PrintScore", new object[] {
                        applicationNoFilter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintScoreAsync(string applicationNoFilter) {
            this.PrintScoreAsync(applicationNoFilter, null);
        }
        
        /// <remarks/>
        public void PrintScoreAsync(string applicationNoFilter, object userState) {
            if ((this.PrintScoreOperationCompleted == null)) {
                this.PrintScoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintScoreOperationCompleted);
            }
            this.InvokeAsync("PrintScore", new object[] {
                        applicationNoFilter}, this.PrintScoreOperationCompleted, userState);
        }
        
        private void OnPrintScoreOperationCompleted(object arg) {
            if ((this.PrintScoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintScoreCompleted(this, new PrintScoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:PrintdetailedReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="PrintdetailedReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintdetailedReport(string applicationNoFilter) {
            object[] results = this.Invoke("PrintdetailedReport", new object[] {
                        applicationNoFilter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintdetailedReportAsync(string applicationNoFilter) {
            this.PrintdetailedReportAsync(applicationNoFilter, null);
        }
        
        /// <remarks/>
        public void PrintdetailedReportAsync(string applicationNoFilter, object userState) {
            if ((this.PrintdetailedReportOperationCompleted == null)) {
                this.PrintdetailedReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintdetailedReportOperationCompleted);
            }
            this.InvokeAsync("PrintdetailedReport", new object[] {
                        applicationNoFilter}, this.PrintdetailedReportOperationCompleted, userState);
        }
        
        private void OnPrintdetailedReportOperationCompleted(object arg) {
            if ((this.PrintdetailedReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintdetailedReportCompleted(this, new PrintdetailedReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ConfirmAccreditationPayment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ConfirmAccreditationPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ConfirmAccreditationPayment(string applicationNo, string paymentRef) {
            object[] results = this.Invoke("ConfirmAccreditationPayment", new object[] {
                        applicationNo,
                        paymentRef});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmAccreditationPaymentAsync(string applicationNo, string paymentRef) {
            this.ConfirmAccreditationPaymentAsync(applicationNo, paymentRef, null);
        }
        
        /// <remarks/>
        public void ConfirmAccreditationPaymentAsync(string applicationNo, string paymentRef, object userState) {
            if ((this.ConfirmAccreditationPaymentOperationCompleted == null)) {
                this.ConfirmAccreditationPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmAccreditationPaymentOperationCompleted);
            }
            this.InvokeAsync("ConfirmAccreditationPayment", new object[] {
                        applicationNo,
                        paymentRef}, this.ConfirmAccreditationPaymentOperationCompleted, userState);
        }
        
        private void OnConfirmAccreditationPaymentOperationCompleted(object arg) {
            if ((this.ConfirmAccreditationPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmAccreditationPaymentCompleted(this, new ConfirmAccreditationPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnCreateApplicantAccountRequest" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnCreateApplicantAccountRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateApplicantAccountRequest(string emailaddress) {
            object[] results = this.Invoke("FnCreateApplicantAccountRequest", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateApplicantAccountRequestAsync(string emailaddress) {
            this.FnCreateApplicantAccountRequestAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void FnCreateApplicantAccountRequestAsync(string emailaddress, object userState) {
            if ((this.FnCreateApplicantAccountRequestOperationCompleted == null)) {
                this.FnCreateApplicantAccountRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateApplicantAccountRequestOperationCompleted);
            }
            this.InvokeAsync("FnCreateApplicantAccountRequest", new object[] {
                        emailaddress}, this.FnCreateApplicantAccountRequestOperationCompleted, userState);
        }
        
        private void OnFnCreateApplicantAccountRequestOperationCompleted(object arg) {
            if ((this.FnCreateApplicantAccountRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateApplicantAccountRequestCompleted(this, new FnCreateApplicantAccountRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:PrintdApplicationReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="PrintdApplicationReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintdApplicationReport(string applicationNoFilter, string code) {
            object[] results = this.Invoke("PrintdApplicationReport", new object[] {
                        applicationNoFilter,
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintdApplicationReportAsync(string applicationNoFilter, string code) {
            this.PrintdApplicationReportAsync(applicationNoFilter, code, null);
        }
        
        /// <remarks/>
        public void PrintdApplicationReportAsync(string applicationNoFilter, string code, object userState) {
            if ((this.PrintdApplicationReportOperationCompleted == null)) {
                this.PrintdApplicationReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintdApplicationReportOperationCompleted);
            }
            this.InvokeAsync("PrintdApplicationReport", new object[] {
                        applicationNoFilter,
                        code}, this.PrintdApplicationReportOperationCompleted, userState);
        }
        
        private void OnPrintdApplicationReportOperationCompleted(object arg) {
            if ((this.PrintdApplicationReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintdApplicationReportCompleted(this, new PrintdApplicationReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SendEmailAccountCreation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SendEmailAccountCreation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendEmailAccountCreation(string email) {
            object[] results = this.Invoke("SendEmailAccountCreation", new object[] {
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailAccountCreationAsync(string email) {
            this.SendEmailAccountCreationAsync(email, null);
        }
        
        /// <remarks/>
        public void SendEmailAccountCreationAsync(string email, object userState) {
            if ((this.SendEmailAccountCreationOperationCompleted == null)) {
                this.SendEmailAccountCreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailAccountCreationOperationCompleted);
            }
            this.InvokeAsync("SendEmailAccountCreation", new object[] {
                        email}, this.SendEmailAccountCreationOperationCompleted, userState);
        }
        
        private void OnSendEmailAccountCreationOperationCompleted(object arg) {
            if ((this.SendEmailAccountCreationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailAccountCreationCompleted(this, new SendEmailAccountCreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Printdsummeryscore", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Printdsummeryscore_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Printdsummeryscore(string applicationNoFilter) {
            object[] results = this.Invoke("Printdsummeryscore", new object[] {
                        applicationNoFilter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintdsummeryscoreAsync(string applicationNoFilter) {
            this.PrintdsummeryscoreAsync(applicationNoFilter, null);
        }
        
        /// <remarks/>
        public void PrintdsummeryscoreAsync(string applicationNoFilter, object userState) {
            if ((this.PrintdsummeryscoreOperationCompleted == null)) {
                this.PrintdsummeryscoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintdsummeryscoreOperationCompleted);
            }
            this.InvokeAsync("Printdsummeryscore", new object[] {
                        applicationNoFilter}, this.PrintdsummeryscoreOperationCompleted, userState);
        }
        
        private void OnPrintdsummeryscoreOperationCompleted(object arg) {
            if ((this.PrintdsummeryscoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintdsummeryscoreCompleted(this, new PrintdsummeryscoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnResetPassword(string emailaddress) {
            object[] results = this.Invoke("FnResetPassword", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress) {
            this.FnResetPasswordAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress, object userState) {
            if ((this.FnResetPasswordOperationCompleted == null)) {
                this.FnResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("FnResetPassword", new object[] {
                        emailaddress}, this.FnResetPasswordOperationCompleted, userState);
        }
        
        private void OnFnResetPasswordOperationCompleted(object arg) {
            if ((this.FnResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnResetPasswordCompleted(this, new FnResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ResetSendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ResetSendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetSendEmail(string emailaddress) {
            this.Invoke("ResetSendEmail", new object[] {
                        emailaddress});
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress) {
            this.ResetSendEmailAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress, object userState) {
            if ((this.ResetSendEmailOperationCompleted == null)) {
                this.ResetSendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetSendEmailOperationCompleted);
            }
            this.InvokeAsync("ResetSendEmail", new object[] {
                        emailaddress}, this.ResetSendEmailOperationCompleted, userState);
        }
        
        private void OnResetSendEmailOperationCompleted(object arg) {
            if ((this.ResetSendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetSendEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:FnChangeStudentPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="FnChangeStudentPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnChangeStudentPassword(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword) {
            object[] results = this.Invoke("FnChangeStudentPassword", new object[] {
                        emailaddress,
                        currentPassword,
                        newPassword,
                        confirmNewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnChangeStudentPasswordAsync(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword) {
            this.FnChangeStudentPasswordAsync(emailaddress, currentPassword, newPassword, confirmNewPassword, null);
        }
        
        /// <remarks/>
        public void FnChangeStudentPasswordAsync(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword, object userState) {
            if ((this.FnChangeStudentPasswordOperationCompleted == null)) {
                this.FnChangeStudentPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnChangeStudentPasswordOperationCompleted);
            }
            this.InvokeAsync("FnChangeStudentPassword", new object[] {
                        emailaddress,
                        currentPassword,
                        newPassword,
                        confirmNewPassword}, this.FnChangeStudentPasswordOperationCompleted, userState);
        }
        
        private void OnFnChangeStudentPasswordOperationCompleted(object arg) {
            if ((this.FnChangeStudentPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnChangeStudentPasswordCompleted(this, new FnChangeStudentPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAccreditationSharepointLinks" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAccreditationSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAccreditationSharepointLinks(string applicationNo, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddAccreditationSharepointLinks", new object[] {
                        applicationNo,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAccreditationSharepointLinksAsync(string applicationNo, string filename, string sharepointlink) {
            this.AddAccreditationSharepointLinksAsync(applicationNo, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddAccreditationSharepointLinksAsync(string applicationNo, string filename, string sharepointlink, object userState) {
            if ((this.AddAccreditationSharepointLinksOperationCompleted == null)) {
                this.AddAccreditationSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAccreditationSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddAccreditationSharepointLinks", new object[] {
                        applicationNo,
                        filename,
                        sharepointlink}, this.AddAccreditationSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddAccreditationSharepointLinksOperationCompleted(object arg) {
            if ((this.AddAccreditationSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAccreditationSharepointLinksCompleted(this, new AddAccreditationSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetApplicationNumberCompletedEventHandler(object sender, GetApplicationNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConfirmPaymentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApproveCompletedEventHandler(object sender, ApproveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyForAccreditationCompletedEventHandler(object sender, ApplyForAccreditationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyForAccreditationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyForAccreditationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteSponsorsCompletedEventHandler(object sender, DeleteSponsorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSponsorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSponsorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteDepartmentsCompletedEventHandler(object sender, DeleteDepartmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDepartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDepartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteSchoolsCompletedEventHandler(object sender, DeleteSchoolsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSchoolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSchoolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAffiliationsCompletedEventHandler(object sender, DeleteAffiliationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAffiliationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAffiliationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteChancellorsCompletedEventHandler(object sender, DeleteChancellorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteChancellorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteChancellorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetInstitutionNumberCompletedEventHandler(object sender, GetInstitutionNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstitutionNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstitutionNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletekeymilestoneCompletedEventHandler(object sender, DeletekeymilestoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletekeymilestoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletekeymilestoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditChancellorsCompletedEventHandler(object sender, EditChancellorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditChancellorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditChancellorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditAffiliationsCompletedEventHandler(object sender, EditAffiliationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditAffiliationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditAffiliationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditSponsorCompletedEventHandler(object sender, EditSponsorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSponsorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSponsorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditKeyMilestonesCompletedEventHandler(object sender, EditKeyMilestonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditKeyMilestonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditKeyMilestonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditSchoolCompletedEventHandler(object sender, EditSchoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSchoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSchoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditDepartmentCompletedEventHandler(object sender, EditDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditGeneralDetailsCompletedEventHandler(object sender, EditGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddMissionDetailsCompletedEventHandler(object sender, AddMissionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMissionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMissionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPhilosophyCompletedEventHandler(object sender, AddPhilosophyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPhilosophyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPhilosophyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddMilestoneCompletedEventHandler(object sender, AddMilestoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMilestoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMilestoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAffiliationsCompletedEventHandler(object sender, AddAffiliationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAffiliationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAffiliationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddschoolFacultiesCompletedEventHandler(object sender, AddschoolFacultiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddschoolFacultiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddschoolFacultiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDepartmentsCompletedEventHandler(object sender, AddDepartmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDepartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDepartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSponsorsCompletedEventHandler(object sender, AddSponsorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSponsorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSponsorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddHistoryCompletedEventHandler(object sender, AddHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditphylosophyCompletedEventHandler(object sender, EditphylosophyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditphylosophyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditphylosophyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateLearningOutcome2CompletedEventHandler(object sender, ValidateLearningOutcome2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateLearningOutcome2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateLearningOutcome2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddLearningOutcomeCompletedEventHandler(object sender, AddLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditProgramRationaleCompletedEventHandler(object sender, EditProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditSpecializationAreasCompletedEventHandler(object sender, EditSpecializationAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSpecializationAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSpecializationAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSpecializationAreasCompletedEventHandler(object sender, AddSpecializationAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSpecializationAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSpecializationAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditLearningOutcomeCompletedEventHandler(object sender, EditLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteLearningOutcomeCompletedEventHandler(object sender, DeleteLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteSpecializationAreaCompletedEventHandler(object sender, DeleteSpecializationAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSpecializationAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSpecializationAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDeliveryModeCompletedEventHandler(object sender, AddDeliveryModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDeliveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDeliveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteDeliveryModeCompletedEventHandler(object sender, DeleteDeliveryModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDeliveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDeliveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void VlidateDeliveryMode2CompletedEventHandler(object sender, VlidateDeliveryMode2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VlidateDeliveryMode2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VlidateDeliveryMode2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddGradingSystemCompletedEventHandler(object sender, AddGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateGradingSystem2CompletedEventHandler(object sender, ValidateGradingSystem2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateGradingSystem2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateGradingSystem2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditGradingSystemCompletedEventHandler(object sender, EditGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteGradingSystemCompletedEventHandler(object sender, DeleteGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUnitCompletedEventHandler(object sender, AddUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditUnitCompletedEventHandler(object sender, EditUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteUnitCompletedEventHandler(object sender, DeleteUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddInstructionalMethodCompletedEventHandler(object sender, AddInstructionalMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInstructionalMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInstructionalMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateInstructionalMethodCompletedEventHandler(object sender, ValidateInstructionalMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateInstructionalMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateInstructionalMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddInstructionalMethodEntryCompletedEventHandler(object sender, AddInstructionalMethodEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInstructionalMethodEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInstructionalMethodEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteInstructionalMethodCompletedEventHandler(object sender, DeleteInstructionalMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInstructionalMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteInstructionalMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCourseLearningOutcomeCompletedEventHandler(object sender, AddCourseLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCourseLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCourseLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddBookCompletedEventHandler(object sender, AddBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateBookCompletedEventHandler(object sender, ValidateBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditBookCompletedEventHandler(object sender, EditBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteBookCompletedEventHandler(object sender, DeleteBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SaveDocumentsInstProgrammesCompletedEventHandler(object sender, SaveDocumentsInstProgrammesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDocumentsInstProgrammesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDocumentsInstProgrammesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConfirmPaymentsInstitutionCompletedEventHandler(object sender, ConfirmPaymentsInstitutionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmPaymentsInstitutionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmPaymentsInstitutionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditCourseLearningOutcomeCompletedEventHandler(object sender, EditCourseLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCourseLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCourseLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCourseLearningOutcomeCompletedEventHandler(object sender, DeleteCourseLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCourseLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCourseLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProgramRationaleCompletedEventHandler(object sender, DeleteProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InstitutionCreateinvoiceCompletedEventHandler(object sender, InstitutionCreateinvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstitutionCreateinvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstitutionCreateinvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetOutComenNumberCompletedEventHandler(object sender, GetOutComenNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutComenNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutComenNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUserHelpEmaiRequestCompletedEventHandler(object sender, FnUserHelpEmaiRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUserHelpEmaiRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUserHelpEmaiRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUniversityChancellorsCompletedEventHandler(object sender, AddUniversityChancellorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUniversityChancellorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUniversityChancellorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InitialGeneralDetailsCompletedEventHandler(object sender, InitialGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitialGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitialGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgramRationaleCompletedEventHandler(object sender, AddProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateProgramRationaleCompletedEventHandler(object sender, ValidateProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateExitReportCompletedEventHandler(object sender, FnGenerateExitReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateExitReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateExitReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateProgrammeFeedbackVoucherCompletedEventHandler(object sender, FnGenerateProgrammeFeedbackVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateProgrammeFeedbackVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateProgrammeFeedbackVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateProgrammeEvaluationTooolCompletedEventHandler(object sender, FnGenerateProgrammeEvaluationTooolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateProgrammeEvaluationTooolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateProgrammeEvaluationTooolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PortalResetPasswordCompletedEventHandler(object sender, PortalResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PortalResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PortalResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetRationaleDescriptionCompletedEventHandler(object sender, FngetRationaleDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetRationaleDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetRationaleDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetUniversityDomainCompletedEventHandler(object sender, FngetUniversityDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetUniversityDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetUniversityDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnuseraccountcreationCompletedEventHandler(object sender, FnuseraccountcreationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnuseraccountcreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnuseraccountcreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnceateapplicationLinesCompletedEventHandler(object sender, FnceateapplicationLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnceateapplicationLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnceateapplicationLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AccreditationApplicationCompletedEventHandler(object sender, AccreditationApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccreditationApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccreditationApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateCampusCompletedEventHandler(object sender, CreateCampusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCampusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCampusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateOptionResponceCompletedEventHandler(object sender, CreateOptionResponceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOptionResponceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOptionResponceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreatAccreditationResponceCompletedEventHandler(object sender, CreatAccreditationResponceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatAccreditationResponceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatAccreditationResponceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStaffCompletedEventHandler(object sender, CreateStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateTrainersCompletedEventHandler(object sender, CreateTrainersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTrainersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTrainersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SittingCapacityCompletedEventHandler(object sender, SittingCapacityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SittingCapacityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SittingCapacityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateRecomBooksCompletedEventHandler(object sender, CreateRecomBooksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRecomBooksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRecomBooksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateComputerLabCompletedEventHandler(object sender, CreateComputerLabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateComputerLabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateComputerLabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateCompDetailsCompletedEventHandler(object sender, CreateCompDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCompDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCompDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateICTAccessoryCompletedEventHandler(object sender, CreateICTAccessoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateICTAccessoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateICTAccessoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCampusLineCompletedEventHandler(object sender, DeleteCampusLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCampusLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCampusLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletestaffLineCompletedEventHandler(object sender, DeletestaffLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletestaffLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletestaffLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletetrainerLineCompletedEventHandler(object sender, DeletetrainerLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletetrainerLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletetrainerLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteclassLineCompletedEventHandler(object sender, DeleteclassLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteclassLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteclassLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteRefBookLineCompletedEventHandler(object sender, DeleteRefBookLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRefBookLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRefBookLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCompLineCompletedEventHandler(object sender, DeleteCompLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCompDetailsLineCompletedEventHandler(object sender, DeleteCompDetailsLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompDetailsLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompDetailsLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SelfEvaluationResponceCompletedEventHandler(object sender, SelfEvaluationResponceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelfEvaluationResponceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelfEvaluationResponceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintCertificateCompletedEventHandler(object sender, PrintCertificateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubmitApplicationCompletedEventHandler(object sender, SubmitApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendEmailCompletedEventHandler(object sender, SendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreatAccreditationSubQResponceCompletedEventHandler(object sender, CreatAccreditationSubQResponceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatAccreditationSubQResponceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatAccreditationSubQResponceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteICTLineCompletedEventHandler(object sender, DeleteICTLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteICTLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteICTLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SelfEvalutionApplicationCompletedEventHandler(object sender, SelfEvalutionApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelfEvalutionApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelfEvalutionApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintScoreCompletedEventHandler(object sender, PrintScoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintdetailedReportCompletedEventHandler(object sender, PrintdetailedReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintdetailedReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintdetailedReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConfirmAccreditationPaymentCompletedEventHandler(object sender, ConfirmAccreditationPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmAccreditationPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmAccreditationPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateApplicantAccountRequestCompletedEventHandler(object sender, FnCreateApplicantAccountRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateApplicantAccountRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateApplicantAccountRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintdApplicationReportCompletedEventHandler(object sender, PrintdApplicationReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintdApplicationReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintdApplicationReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendEmailAccountCreationCompletedEventHandler(object sender, SendEmailAccountCreationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailAccountCreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailAccountCreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintdsummeryscoreCompletedEventHandler(object sender, PrintdsummeryscoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintdsummeryscoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintdsummeryscoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnResetPasswordCompletedEventHandler(object sender, FnResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetSendEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnChangeStudentPasswordCompletedEventHandler(object sender, FnChangeStudentPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnChangeStudentPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnChangeStudentPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAccreditationSharepointLinksCompletedEventHandler(object sender, AddAccreditationSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAccreditationSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAccreditationSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591